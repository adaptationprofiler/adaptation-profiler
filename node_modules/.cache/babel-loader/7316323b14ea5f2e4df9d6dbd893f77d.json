{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aross/Desktop/adaptation-profiler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/aross/Desktop/adaptation-profiler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import File from'../misc/test.csv';import csv2array from'./CSVToArray';function Main(){return _Main.apply(this,arguments);}function _Main(){_Main=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var rawData,time,mpp,getData,_getData,findMaxPowerPoint,zipArray,dotProduct,formatData,data,formattedData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_getData=function _getData3(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,table;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(File);case 2:response=_context.sent;_context.next=5;return response.text();case 5:table=_context.sent;rawData=csv2array(table);case 7:case\"end\":return _context.stop();}}},_callee);}));return _getData.apply(this,arguments);};getData=function _getData2(){return _getData.apply(this,arguments);};// Initial Values\ntime=[];mpp=[];// Handles CSV Data\nfindMaxPowerPoint=function findMaxPowerPoint(input){var i=0;var temp_time=[];var voltage=[];var current=[];input.forEach(function(item,index,array){temp_time.push(item[0]);voltage.push(item[1]);current.push(item[2]);i=i+1;if(i===512){time.push(Math.max.apply(Math,temp_time));mpp.push(Math.max.apply(Math,dotProduct(zipArray(voltage,current))));voltage=[];current=[];i=0;}});};zipArray=function zipArray(array1,array2){var zipArray=array1.map(function(e,i){return[e,array2[i]];});return zipArray;};dotProduct=function dotProduct(array){var dotProduct=array.map(function(item){return[item[0]*item[1]];});return dotProduct;};formatData=function formatData(input){var data=[];input.forEach(function(item,index,array){data.push({Time:item[0],Power:item[1]*1000});});return data;};// Script\n_context2.next=10;return getData();case 10:findMaxPowerPoint(rawData);data=zipArray(time,mpp);formattedData=formatData(data);return _context2.abrupt(\"return\",formattedData);case 14:case\"end\":return _context2.stop();}}},_callee2);}));return _Main.apply(this,arguments);}export default Main;","map":{"version":3,"sources":["/Users/aross/Desktop/adaptation-profiler/src/scripts/GraphScript.js"],"names":["File","csv2array","Main","getData","fetch","response","text","table","rawData","time","mpp","findMaxPowerPoint","input","i","temp_time","voltage","current","forEach","item","index","array","push","Math","max","apply","dotProduct","zipArray","array1","array2","map","e","formatData","data","Time","Power","formattedData"],"mappings":"2TAAA,MAAOA,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,C,QAEeC,CAAAA,I,sHAAf,yCAQmBC,OARnB,iSAQI,4KAC2BC,CAAAA,KAAK,CAACJ,IAAD,CADhC,QACUK,QADV,qCAEwBA,CAAAA,QAAQ,CAACC,IAAT,EAFxB,QAEUC,KAFV,eAGIC,OAAO,CAAGP,SAAS,CAACM,KAAD,CAAnB,CAHJ,sDARJ,2CAQmBJ,OARnB,8DAEI;AAEIM,IAJR,CAIe,EAJf,CAKQC,GALR,CAKc,EALd,CAOI;AAOMC,iBAdV,CAc8B,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACjC,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACAJ,KAAK,CAACK,OAAN,CAAc,SAACC,IAAD,CAAOC,KAAP,CAAcC,KAAd,CAAwB,CAClCN,SAAS,CAACO,IAAV,CAAeH,IAAI,CAAC,CAAD,CAAnB,EACAH,OAAO,CAACM,IAAR,CAAaH,IAAI,CAAC,CAAD,CAAjB,EACAF,OAAO,CAACK,IAAR,CAAaH,IAAI,CAAC,CAAD,CAAjB,EACAL,CAAC,CAAGA,CAAC,CAAG,CAAR,CACA,GAAIA,CAAC,GAAK,GAAV,CAAe,CACXJ,IAAI,CAACY,IAAL,CAAUC,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeF,IAAf,CAAqBR,SAArB,CAAV,EACAJ,GAAG,CAACW,IAAJ,CAASC,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeF,IAAf,CAAqBG,UAAU,CAACC,QAAQ,CAACX,OAAD,CAAUC,OAAV,CAAT,CAA/B,CAAT,EACAD,OAAO,CAAG,EAAV,CACAC,OAAO,CAAG,EAAV,CACAH,CAAC,CAAG,CAAJ,CACH,CACJ,CAZD,EAaH,CAhCL,CAkCUa,QAlCV,CAkCqB,kBAACC,MAAD,CAASC,MAAT,CAAoB,CACjC,GAAMF,CAAAA,QAAQ,CAAGC,MAAM,CAACE,GAAP,CAAW,SAAUC,CAAV,CAAajB,CAAb,CAAgB,CACxC,MAAO,CAACiB,CAAD,CAAIF,MAAM,CAACf,CAAD,CAAV,CAAP,CACH,CAFgB,CAAjB,CAGA,MAAOa,CAAAA,QAAP,CACH,CAvCL,CAyCUD,UAzCV,CAyCuB,oBAACL,KAAD,CAAW,CAC1B,GAAMK,CAAAA,UAAU,CAAGL,KAAK,CAACS,GAAN,CAAU,SAACX,IAAD,CAAU,CACnC,MAAO,CAAEA,IAAI,CAAC,CAAD,CAAJ,CAAUA,IAAI,CAAC,CAAD,CAAhB,CAAP,CACH,CAFkB,CAAnB,CAGA,MAAOO,CAAAA,UAAP,CACH,CA9CL,CAgDUM,UAhDV,CAgDuB,QAAbA,CAAAA,UAAa,CAACnB,KAAD,CAAW,CAC1B,GAAMoB,CAAAA,IAAI,CAAG,EAAb,CACApB,KAAK,CAACK,OAAN,CAAc,SAACC,IAAD,CAAOC,KAAP,CAAcC,KAAd,CAAwB,CAClCY,IAAI,CAACX,IAAL,CAAU,CAAEY,IAAI,CAAEf,IAAI,CAAC,CAAD,CAAZ,CAAiBgB,KAAK,CAAEhB,IAAI,CAAC,CAAD,CAAJ,CAAQ,IAAhC,CAAV,EACH,CAFD,EAGA,MAAOc,CAAAA,IAAP,CACH,CAtDL,CAwDI;AAxDJ,wBAyDU7B,CAAAA,OAAO,EAzDjB,SA0DIQ,iBAAiB,CAACH,OAAD,CAAjB,CACMwB,IA3DV,CA2DiBN,QAAQ,CAACjB,IAAD,CAAOC,GAAP,CA3DzB,CA4DUyB,aA5DV,CA4D0BJ,UAAU,CAACC,IAAD,CA5DpC,kCA6DWG,aA7DX,2D,uCAiEA,cAAejC,CAAAA,IAAf","sourcesContent":["import File from '../misc/test.csv';\nimport csv2array from './CSVToArray';\n\nasync function Main() {\n\n    // Initial Values\n    let rawData;\n    let time = [];\n    let mpp = [];\n\n    // Handles CSV Data\n    async function getData() {\n        const response = await fetch(File);\n        const table = await response.text();\n        rawData = csv2array(table);\n    }\n\n    const findMaxPowerPoint = (input) => {\n        let i = 0;\n        let temp_time = [];\n        let voltage = [];\n        let current = [];\n        input.forEach((item, index, array) => {\n            temp_time.push(item[0]);\n            voltage.push(item[1]);\n            current.push(item[2]);\n            i = i + 1;\n            if (i === 512) {\n                time.push(Math.max.apply(Math, temp_time));\n                mpp.push(Math.max.apply(Math, dotProduct(zipArray(voltage, current))));\n                voltage = [];\n                current = [];\n                i = 0;\n            }\n        })\n    }\n\n    const zipArray = (array1, array2) => {\n        const zipArray = array1.map(function (e, i) {\n            return [e, array2[i]];\n        });\n        return zipArray;\n    }\n\n    const dotProduct = (array) => {\n        const dotProduct = array.map((item) => {\n            return [(item[0] * item[1])];\n        })\n        return dotProduct;\n    }\n\n    const formatData = (input) => {\n        const data = []\n        input.forEach((item, index, array) => {\n            data.push({ Time: item[0], Power: item[1]*1000 })\n        })\n        return data\n    }\n\n    // Script\n    await getData();\n    findMaxPowerPoint(rawData);\n    const data = zipArray(time, mpp);\n    const formattedData = formatData(data);\n    return formattedData;\n\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}