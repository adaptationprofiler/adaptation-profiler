{"version":3,"sources":["misc/high-energy.csv","misc/low-energy.csv","misc/random.csv","misc/moving-fast-energy.csv","misc/moving-slow-energy.csv","scripts/SimulationScript.js","scripts/GraphScript.js","components/Graph.js","App.js","index.js","scripts/CSVToArray.js"],"names":["Main","histArraySize","stepSize","equation","adapt","csv","getData","a","fetch","HighEnergy","response","text","table","rawData","csv2array","LowEnergy","Random","MovingFast","MovingSlow","configuration","MNIST","adaptationStrategy","capacitance","newVoltage","oldVoltage","current","simulationTime","hasBeenMax","timeArray","accuracyArray","onTimeAccuracy","offTimeAccuracy","bootTime","executedTasks","currentTask","tasks","currentTaskNumber","currentTaskIterationNumber","adaptiveVariables","equation1","equation2","equation3","equation4","adaptUp","includes","adaptDown","split","pop","index1","index2","index3","index4","one","substr","lastIndexOf","match","parseInt","two","three","four","onTime","avgOnTime","s_onTime","Array","fill","offTime","avgOffTime","s_offTime","appCompletionTime","avgAppCompletionTime","s_appCompTime","taskCount","avgTaskCount","s_taskCount","powerFailureCount","avgpowerFailureCount","s_pFC","lowerAdaptationThreshold","upperAdaptationThreshold","adaptationStepSize","upperThresholdVoltage","lowerThresholdVoltage","stepTime","appCompletions","totalConsumedEnergy","totalPowerFailures","totalTasksExecuted","appCompleted","initializeAdaptiveVariables","variables","adaptiveVariablesValues","i","length","average","list","reduce","prev","curr","executeTasks","energy","availableEnergy","taskIterations","adaptiveVars","window","eval","energyPerItr","time","taskWeight","console","log","taskName","nextTask","calculateEnergy","calculateNewVoltage","v_old","v_eh","r","t","Math","exp","calculateRemainingVoltage","sqrt","voltage","findClosestValue","arr","val","closestValue","abs","extractTimeArray","newTimeArray","filteredArray","filter","_","push","extractVoltageArray","newVoltageArray","j","findCurrentNow","zipArray","array1","array2","map","e","dotProduct","array","item","findTotalEnergy","input","temp_time","forEach","index","max","apply","findAccuracyNow","skipRows","skipColumns","accuracyMapString","accuracyMapValue","accuracyMap","handleMLAccuracy","b","closestTimestamp","voltageArray","closestVoltage","resistance","usefulEnergy","remainingUsefulEnergy","initOverheadEnergy","totalRemainingEnergy","unshift","slice","adaptedAccuracy","Time","originalAccuracy","shouldAdaptUp1","evaluate","shouldAdaptUp2","shouldAdaptDown1","shouldAdaptDown2","mlAccuracy","totalAvailableEnergy","roundedAccuracy","toFixed","mpp","findMaxPowerPoint","formatData","data","Power","formattedData","Example","props","state","GraphScript","this","then","setState","prevProps","ResponsiveContainer","width","height","ComposedChart","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","XAxis","dataKey","type","domain","ticks","Label","value","position","YAxis","angle","yAxisId","orientation","Tooltip","Legend","verticalAlign","Area","stroke","fillOpacity","activeDot","Line","strokeWidth","PureComponent","App","elements","JSONdata","useState","CSV","setCSV","flowChart","setFlowChart","setTotalAvailableEnergy","setTotalConsumedEnergy","setTotalTasksExecuted","setTotalPowerFailures","setAppCompletions","accuracy","setAccuracy","setOnTimeAccuracy","setOffTimeAccuracy","actualEquation1","setActualEquation1","actualEquation2","setActualEquation2","String","raw","LaTeXEquation1","setLaTeXEquation1","LaTeXEquation2","setLaTeXEquation2","showModal","setShowModal","showLoading","setShowLoading","setHistArraySize","setStepSize","useEffect","getElements","x","y","label","sourcePosition","targetPosition","style","backgroundColor","borderRadius","padding","fontSize","fontWeight","source","target","arrowHeadType","animated","PrettoSlider","withStyles","root","color","thumb","border","marginTop","marginLeft","boxShadow","active","valueLabel","track","rail","Slider","pointerEvents","opacity","flex","arrowHeadColor","variant","gap","size","flexDirection","fontFamily","textAlign","IconButton","onClick","justifyContent","alignItems","textDecoration","marginBottom","valueLabelDisplay","aria-label","onChange","event","onChangeCommitted","borderWidth","borderColor","borderStyle","display","TextField","handleAdaptUp","onKeyPress","ev","key","parced","parse","toTex","commitAdaptUp","handleAdaptDown","commitAdaptDown","FormControlLabel","control","Switch","Button","parced1","parced2","SimulationScript","executeScript","Dialog","open","onClose","aria-labelledby","fullWidth","maxWidth","DialogTitle","InputLabel","Select","labelId","placeholder","MenuItem","DialogActions","ReactDOM","render","StrictMode","document","getElementById","delimeter","undefined","c","charAt","row","col"],"mappings":"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","file":"static/js/main.a5e9acd0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/high-energy.24e147d3.csv\";","export default __webpack_public_path__ + \"static/media/low-energy.115cf14b.csv\";","export default __webpack_public_path__ + \"static/media/random.f5cfaf05.csv\";","export default __webpack_public_path__ + \"static/media/moving-fast-energy.b7d6ebc6.csv\";","export default __webpack_public_path__ + \"static/media/moving-slow-energy.c31f9bb5.csv\";","import HighEnergy from '../misc/high-energy.csv';\nimport LowEnergy from '../misc/low-energy.csv';\nimport Random from '../misc/random.csv';\nimport MovingFast from '../misc/moving-fast-energy.csv';\nimport MovingSlow from '../misc/moving-slow-energy.csv';\nimport MNIST from '../config/mnist.json';\nimport csv2array from './CSVToArray';\nimport { evaluate } from 'mathjs'\n\nasync function Main(histArraySize, stepSize, equation, adapt, csv) {\n\n    // Configuration\n    const configuration = MNIST.adaptationStrategy[0];\n\n    // Initial Values\n    const capacitance = 200e-6; //micro-farads\n    let newVoltage = 0; //volts\n    let oldVoltage = 0 //volts\n    let current = 0; //amperes\n    let simulationTime = 0; //seconds\n    let hasBeenMax = false;\n    let rawData = [];\n\n    // Useful Utility Arrays\n    let timeArray = [];\n    let accuracyArray = [];\n    let onTimeAccuracy = [];\n    let offTimeAccuracy = [];\n\n    // Task Management Logic\n    let bootTime = 0;\n    let executedTasks = false;\n    let currentTask = configuration.tasks[0];\n    let currentTaskNumber = 0;\n    let currentTaskIterationNumber = 0;\n    let adaptiveVariables = configuration.adaptiveVariables;\n\n    // Adaptation Equations\n    let equation1 = \"\";\n    let equation2 = \"\";\n    let equation3 = \"\";\n    let equation4 = \"\";\n    if (equation.adaptUp.includes(\">\") && equation.adaptDown.includes(\"<\")) {\n        equation1 = equation.adaptUp.split('>')[0];\n        equation2 = equation.adaptUp.split('>').pop();\n        equation3 = equation.adaptDown.split('<')[0];\n        equation4 = equation.adaptDown.split('<').pop();\n    } else if (equation.adaptUp.includes(\"<\") && equation.adaptDown.includes(\">\")) {\n        equation1 = equation.adaptUp.split('<')[0];\n        equation2 = equation.adaptUp.split('<').pop();\n        equation3 = equation.adaptDown.split('>')[0];\n        equation4 = equation.adaptDown.split('>').pop();\n    } else if (equation.adaptUp.includes(\">\") && equation.adaptDown.includes(\">\")) {\n        equation1 = equation.adaptUp.split('>')[0];\n        equation2 = equation.adaptUp.split('>').pop();\n        equation3 = equation.adaptDown.split('>')[0];\n        equation4 = equation.adaptDown.split('>').pop();\n    } else if (equation.adaptUp.includes(\"<\") && equation.adaptDown.includes(\"<\")) {\n        equation1 = equation.adaptUp.split('<')[0];\n        equation2 = equation.adaptUp.split('<').pop();\n        equation3 = equation.adaptDown.split('<')[0];\n        equation4 = equation.adaptDown.split('<').pop();\n    }\n\n    // Adaptation Index\n    let index1 = 0;\n    let index2 = 0;\n    let index3 = 0;\n    let index4 = 0;\n    if (adapt) {\n        if (equation1.includes(\"[\")) {\n            const one = equation1.split('[').pop().split(']')[0];\n            equation1 = equation1.substr(0, equation1.lastIndexOf(\"[\"));\n            if (one.match(/[a-zA-Z]/)) {\n                index1 = 0\n            } else {\n                index1 = parseInt(one);\n            }\n        } if (equation2.includes(\"[\")) {\n            const two = equation2.split('[').pop().split(']')[0];\n            equation2 = equation2.substr(0, equation2.lastIndexOf(\"[\"));\n            if (two.match(/[a-zA-Z]/)) {\n                index2 = 0\n            } else {\n                index2 = parseInt(two);\n            }\n        } if (equation3.includes(\"[\")) {\n            const three = equation3.split('[').pop().split(']')[0];\n            equation3 = equation3.substr(0, equation3.lastIndexOf(\"[\"));\n            if (three.match(/[a-zA-Z]/)) {\n                index3 = 0\n            } else {\n                index3 = parseInt(three);\n            }\n        } if (equation4.includes(\"[\")) {\n            const four = equation4.split('[').pop().split(']')[0];\n            equation4 = equation4.substr(0, equation4.lastIndexOf(\"[\"));\n            if (four.match(/[a-zA-Z]/)) {\n                index4 = 0\n            } else {\n                index4 = parseInt(four);\n            }\n        }\n    }\n\n    // Adaptation Signals\n    let onTime = 0;\n    let avgOnTime = 0;\n    let s_onTime = new Array(histArraySize + 1).fill(0);\n\n    let offTime = 0;\n    let avgOffTime = 0;\n    let s_offTime = new Array(histArraySize + 1).fill(0);\n\n    let appCompletionTime = 0;\n    let avgAppCompletionTime = 0;\n    let s_appCompTime = new Array(histArraySize + 1).fill(0);\n\n    let taskCount = 0;\n    let avgTaskCount = 0;\n    let s_taskCount = new Array(histArraySize + 1).fill(0);\n\n    let powerFailureCount = 0;\n    let avgpowerFailureCount = 0;\n    let s_pFC = new Array(histArraySize + 1).fill(0);\n\n    let lowerAdaptationThreshold = 0;\n    let upperAdaptationThreshold = 7;\n    let adaptationStepSize = stepSize;\n\n    // Threshold Logic\n    let upperThresholdVoltage = 2.9 //volts\n    let lowerThresholdVoltage = 1.9 //volts\n\n    // Step Logic\n    let stepTime = 0.01; //seconds\n\n    // Global Runs Logic\n    let appCompletions = 0;\n    let totalConsumedEnergy = 0;\n    let totalPowerFailures = 0;\n    let totalTasksExecuted = 0;\n    let appCompleted = false;\n\n    // Functions Library\n\n    async function getData() {\n        if (csv === \"High-Energy\") {\n            const response = await fetch(HighEnergy);\n            const table = await response.text();\n            rawData = csv2array(table);\n        } else if (csv === \"Low-Energy\") {\n            const response = await fetch(LowEnergy);\n            const table = await response.text();\n            rawData = csv2array(table);\n        } else if (csv === \"Random\") {\n            const response = await fetch(Random);\n            const table = await response.text();\n            rawData = csv2array(table);\n        } else if (csv === \"Moving-Fast\") {\n            const response = await fetch(MovingFast);\n            const table = await response.text();\n            rawData = csv2array(table);\n        } else if (csv === \"Moving-Slow\") {\n            const response = await fetch(MovingSlow);\n            const table = await response.text();\n            rawData = csv2array(table);\n        }\n    }\n\n    const initializeAdaptiveVariables = (variables) => {\n        let adaptiveVariablesValues = {}\n        for (var i = 0; i < variables.length; i++) {\n            adaptiveVariablesValues[variables[i]] = 0;\n        }\n        return adaptiveVariablesValues;\n    }\n\n    const average = list => list.reduce((prev, curr) => prev + curr) / list.length;\n\n    const executeTasks = (energy) => {\n\n        let availableEnergy = energy;\n        if (typeof currentTask.taskIterations !== 'number') {\n            let taskIterations;\n            for (var i = 0; i < currentTask.adaptiveVars.length; i++) {\n                window[currentTask.adaptiveVars[i]] = adaptiveVariablesValues[currentTask.adaptiveVars[i]];\n            }\n            taskIterations = eval(currentTask.taskIterations);\n            if (energy > currentTask.energyPerItr) {\n                stepTime = currentTask.time;\n                availableEnergy = energy - currentTask.energyPerItr;\n                taskCount = taskCount + currentTask.taskWeight;\n                totalTasksExecuted = totalTasksExecuted + 1;\n                currentTaskIterationNumber = currentTaskIterationNumber + 1;\n                if (taskIterations == currentTaskIterationNumber) {\n                    console.log(currentTask.taskName);\n                    console.log(\"task completion time\", simulationTime);\n                    if (currentTask.nextTask !== \"task_init\") {\n                        currentTaskIterationNumber = 0;\n                        currentTaskNumber = currentTaskNumber + 1;\n                        currentTask = configuration.tasks[currentTaskNumber];\n                    } else if (currentTask.nextTask === \"task_init\") {\n                        appCompleted = true;\n                    }\n                }\n                return availableEnergy;\n            } else {\n                stepTime = currentTask.time * (availableEnergy / currentTask.energyPerItr);\n                hasBeenMax = false;\n                powerFailureCount = powerFailureCount + 1;\n                totalPowerFailures = totalPowerFailures + 1;\n                availableEnergy = calculateEnergy(lowerThresholdVoltage);\n                return availableEnergy;\n            }\n        } else {\n            const taskIterations = currentTask.taskIterations;\n            if (energy > currentTask.energyPerItr) {\n                stepTime = currentTask.time;\n                availableEnergy = energy - currentTask.energyPerItr;\n                taskCount = taskCount + currentTask.taskWeight;\n                totalTasksExecuted = totalTasksExecuted + 1;\n                currentTaskIterationNumber = currentTaskIterationNumber + 1;\n                if (taskIterations === currentTaskIterationNumber) {\n                    console.log(currentTask.taskName);\n                    console.log(\"task completion time\", simulationTime);\n                    if (currentTask.nextTask !== \"task_init\") {\n                        currentTaskIterationNumber = 0;\n                        currentTaskNumber = currentTaskNumber + 1;\n                        currentTask = configuration.tasks[currentTaskNumber];\n                    } else if (currentTask.nextTask === \"task_init\") {\n                        appCompleted = true;\n                    }\n                }\n                return availableEnergy;\n            } else {\n                stepTime = currentTask.time * (availableEnergy / currentTask.energyPerItr)\n                hasBeenMax = false;\n                powerFailureCount = powerFailureCount + 1;\n                totalPowerFailures = totalPowerFailures + 1;\n                availableEnergy = calculateEnergy(lowerThresholdVoltage);\n                return availableEnergy;\n            }\n        }\n    }\n\n    const calculateNewVoltage = (v_old, v_eh, r, t) => {\n        newVoltage = v_eh * (1 - Math.exp(-t / (r * capacitance))) + v_old;\n        // const newVoltage = ((1 / capacitance) * ((c) * (t))) + v;\n        return newVoltage\n    }\n\n    const calculateRemainingVoltage = (energy) => {\n        const voltage = Math.sqrt(2 * (1 / capacitance) * (energy));\n        return voltage\n    }\n\n    const calculateEnergy = (voltage) => {\n        const maxEnergy = (0.5) * (capacitance) * (voltage) * (voltage);\n        return maxEnergy\n    }\n\n    const findClosestValue = async (arr, val) => {\n        const closestValue = arr.reduce(function (prev, curr) {\n            return (Math.abs(curr - val) < Math.abs(prev - val) ? curr : prev);\n        });\n        return closestValue;\n    }\n\n    const extractTimeArray = async (arr) => {\n        let newTimeArray = []\n        let filteredArray = arr.filter((_, i) => i % 512 == 0);\n        for (var a = 0; a < filteredArray.length; a++) {\n            newTimeArray.push(filteredArray[a][0]);\n        }\n        return newTimeArray\n    }\n\n    const extractVoltageArray = async (arr, time) => {\n        let newVoltageArray = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i][0] == time) {\n                for (var j = i; j < 512 + i; j++) {\n                    newVoltageArray.push(arr[j][1]);\n                }\n                break;\n            }\n        }\n        return newVoltageArray\n    }\n\n    const findCurrentNow = (time, voltage) => {\n        for (var i = 0; i < rawData.length; i++) {\n            if (rawData[i][0] == time) {\n                for (var j = i; j < 512 + i; j++) {\n                    if (rawData[j][1] == voltage) {\n                        return rawData[j][2]\n                    }\n                }\n            }\n        }\n    }\n\n    const zipArray = (array1, array2) => {\n        const zipArray = array1.map(function (e, i) {\n            return [e, array2[i]];\n        });\n        return zipArray;\n    }\n\n    const dotProduct = (array) => {\n        const dotProduct = array.map((item) => {\n            return [(item[0] * item[1])];\n        })\n        return dotProduct;\n    }\n\n    const findTotalEnergy = (input) => {\n        let i = 0;\n        let temp_time = [];\n        let voltage = [];\n        let current = [];\n        let energy = 0;\n        input.forEach((item, index, array) => {\n            temp_time.push(item[0]);\n            voltage.push(item[1]);\n            current.push(item[2]);\n            i = i + 1;\n            if (i === 512) {\n                energy = energy + (Math.max.apply(Math, temp_time) * Math.max.apply(Math, dotProduct(zipArray(voltage, current))));\n                voltage = [];\n                current = [];\n                i = 0;\n            }\n        })\n        return energy;\n    }\n\n    const findAccuracyNow = () => {\n        const skipRows = adaptiveVariablesValues.skipRows;\n        const skipColumns = adaptiveVariablesValues.skipColumns;\n        const accuracyMapString = `${skipRows}_${skipColumns}`;\n        const accuracyMapValue = configuration.accuracyMap[accuracyMapString];\n        accuracyArray.push(accuracyMapValue);\n    }\n\n    const handleMLAccuracy = () => {\n        if (accuracyArray.length > 0) {\n            const averageAccuracy = accuracyArray.reduce((a, b) => a + b) / accuracyArray.length;\n            return averageAccuracy;\n        } else {\n            return 0;\n        }\n    }\n\n    // Adaptation\n    const adaptUp = () => {\n        console.log(\"made it 1\")\n        if (adaptiveVariablesValues[\"skipRows\"] !== lowerAdaptationThreshold) {\n            adaptiveVariablesValues[\"skipRows\"] = adaptiveVariablesValues[\"skipRows\"] - adaptationStepSize;\n        }\n        if (adaptiveVariablesValues[\"skipColumns\"] !== lowerAdaptationThreshold) {\n            adaptiveVariablesValues[\"skipColumns\"] = adaptiveVariablesValues[\"skipColumns\"] - adaptationStepSize;\n        }\n    }\n\n    const adaptDown = () => {\n        console.log(\"made it 2\")\n        if (adaptiveVariablesValues[\"skipRows\"] < upperAdaptationThreshold) {\n            adaptiveVariablesValues[\"skipRows\"] = adaptiveVariablesValues[\"skipRows\"] + adaptationStepSize;\n        }\n        if (adaptiveVariablesValues[\"skipColumns\"] < upperAdaptationThreshold) {\n            adaptiveVariablesValues[\"skipColumns\"] = adaptiveVariablesValues[\"skipColumns\"] + adaptationStepSize;\n        }\n    }\n\n    // Setup\n\n    await getData();\n    timeArray = await extractTimeArray(rawData);\n    const adaptiveVariablesValues = initializeAdaptiveVariables(adaptiveVariables);\n\n    // Main Script\n\n    while (simulationTime < timeArray[timeArray.length - 1]) {\n\n        // INSERT SOME LOGIC TO HANDLE TASKS HERE (POTENTIALLY)\n\n        bootTime = 0;\n\n        executedTasks = false;\n\n        // Call Charge Capacitor\n\n        // 1) Check which timestamp is closest to simulation time\n        const closestTimestamp = await findClosestValue(timeArray, simulationTime);\n        // console.log(\"closest Timestamp\", closestTimestamp)\n        // 1.5) Get array of voltages that corresponds to the given timestamp \n        const voltageArray = await extractVoltageArray(rawData, closestTimestamp);\n        // 2) Find which voltage closely coresponds to oldVoltage within this IV curve\n        const closestVoltage = await findClosestValue(voltageArray, oldVoltage);\n        // 3) Lookuptable based on those 2 values to find current\n        current = findCurrentNow(closestTimestamp, closestVoltage) * 15;\n        const resistance = closestVoltage/current;\n        // 4) Calculate new voltage based on the current\n        newVoltage = calculateNewVoltage(oldVoltage, closestVoltage, resistance, stepTime);\n\n        // Check If capacitor hits upper threshold\n        if (hasBeenMax === false && newVoltage >= upperThresholdVoltage) {\n            hasBeenMax = true;\n            const energy = calculateEnergy(newVoltage)\n            const usefulEnergy = energy - calculateEnergy(lowerThresholdVoltage);\n            const remainingUsefulEnergy = usefulEnergy - MNIST.initOverheadEnergy;\n            totalConsumedEnergy = totalConsumedEnergy + MNIST.initOverheadEnergy;\n            const totalRemainingEnergy = remainingUsefulEnergy + calculateEnergy(lowerThresholdVoltage);\n            newVoltage = calculateRemainingVoltage(totalRemainingEnergy)\n            bootTime = MNIST.time;\n            executedTasks = true;\n        }\n\n        if (hasBeenMax === true && newVoltage <= lowerThresholdVoltage) {\n            hasBeenMax = false;\n        }\n\n        // Execute if capacitor voltage is within upper and lower thresholds\n        if (newVoltage >= lowerThresholdVoltage && hasBeenMax === true) {\n            const energy = calculateEnergy(newVoltage);\n            const usefulEnergy = energy - calculateEnergy(lowerThresholdVoltage);\n            const remainingUsefulEnergy = executeTasks(usefulEnergy);\n            const totalRemainingEnergy = remainingUsefulEnergy + calculateEnergy(lowerThresholdVoltage);\n            totalConsumedEnergy = totalConsumedEnergy + (usefulEnergy - remainingUsefulEnergy);\n            oldVoltage = calculateRemainingVoltage(totalRemainingEnergy);\n            executedTasks = true;\n        } else {\n            stepTime = 0.01;\n            oldVoltage = newVoltage;\n            executedTasks = false;\n            taskCount = 0;\n        }\n\n        // Increments simulation time\n        simulationTime = simulationTime + stepTime + bootTime;\n\n        // Increments on/off time\n        if (executedTasks) {\n            onTime = onTime + ((stepTime + bootTime) * 1000);\n        } else {\n            offTime = offTime + (stepTime * 1000);\n        }\n        appCompletionTime = onTime + offTime;\n\n        // Handles App Completions\n        if (appCompleted) {\n            appCompletions = appCompletions + 1;\n            appCompleted = false;\n\n            // Push elements to the buffer\n            s_onTime.unshift(onTime);\n            s_onTime.pop();\n            s_offTime.unshift(offTime);\n            s_offTime.pop();\n            s_appCompTime.unshift(appCompletionTime);\n            s_appCompTime.pop();\n            s_taskCount.unshift(taskCount);\n            s_taskCount.pop();\n            s_pFC.unshift(powerFailureCount);\n            s_pFC.pop();\n            console.log(\"onTime\", s_onTime);\n            console.log(\"offTime\", s_offTime);\n            console.log(\"app completion time\", s_appCompTime);\n            console.log(\"taskCount\", s_taskCount);\n            console.log(\"failure count\", s_pFC);\n            console.log(\"skip Rows\", adaptiveVariablesValues[\"skipRows\"]);\n            console.log(\"skip Columns\", adaptiveVariablesValues[\"skipColumns\"]);\n\n            // Averaging\n            if (adapt) {\n                avgOnTime = average(s_onTime.slice(1, histArraySize));\n                avgOffTime = average(s_offTime.slice(1, histArraySize));\n                avgAppCompletionTime = average(s_appCompTime.slice(1, histArraySize));\n                avgTaskCount = average(s_taskCount.slice(1, histArraySize));\n                avgpowerFailureCount = average(s_pFC.slice(1, histArraySize));\n            }\n\n            // Handles Graphical Display\n            findAccuracyNow();\n            if (adaptiveVariablesValues[\"skipColumns\"] !== 0 || adaptiveVariablesValues[\"skipRows\"] !== 0) {\n                onTimeAccuracy.push({ adaptedAccuracy: accuracyArray[accuracyArray.length - 1], Time: simulationTime })\n            } else if (adaptiveVariablesValues[\"skipColumns\"] == 0 || adaptiveVariablesValues[\"skipRows\"] == 0) {\n                offTimeAccuracy.push({ originalAccuracy: accuracyArray[accuracyArray.length - 1], Time: simulationTime })\n            }\n\n            // Adaptation\n            if (adapt) {\n                const shouldAdaptUp1 = evaluate(equation1,\n                    {\n                        s_onTime: s_onTime[index1],\n                        avgOnTime: avgOnTime,\n                        s_offTime: s_offTime[index1],\n                        avgOffTime: avgOffTime,\n                        s_appCompTime: s_appCompTime[index1],\n                        avgAppCompletionTime: avgAppCompletionTime,\n                        s_taskCount: s_taskCount[index1],\n                        avgTaskCount: avgTaskCount,\n                        s_pFC: s_pFC[index1],\n                        avgpowerFailureCount: avgpowerFailureCount\n                    }\n                );\n                const shouldAdaptUp2 = evaluate(equation2,\n                    {\n                        s_onTime: s_onTime[index2],\n                        avgOnTime: avgOnTime,\n                        s_offTime: s_offTime[index2],\n                        avgOffTime: avgOffTime,\n                        s_appCompTime: s_appCompTime[index2],\n                        avgAppCompletionTime: avgAppCompletionTime,\n                        s_taskCount: s_taskCount[index2],\n                        avgTaskCount: avgTaskCount,\n                        s_pFC: s_pFC[index2],\n                        avgpowerFailureCount: avgpowerFailureCount\n                    }\n                );\n                const shouldAdaptDown1 = evaluate(equation3,\n                    {\n                        s_onTime: s_onTime[index3],\n                        avgOnTime: avgOnTime,\n                        s_offTime: s_offTime[index3],\n                        avgOffTime: avgOffTime,\n                        s_appCompTime: s_appCompTime[index3],\n                        avgAppCompletionTime: avgAppCompletionTime,\n                        s_taskCount: s_taskCount[index3],\n                        avgTaskCount: avgTaskCount,\n                        s_pFC: s_pFC[index3],\n                        avgpowerFailureCount: avgpowerFailureCount\n                    }\n                );\n                const shouldAdaptDown2 = evaluate(equation4,\n                    {\n                        s_onTime: s_onTime[index4],\n                        avgOnTime: avgOnTime,\n                        s_offTime: s_offTime[index4],\n                        avgOffTime: avgOffTime,\n                        s_appCompTime: s_appCompTime[index4],\n                        avgAppCompletionTime: avgAppCompletionTime,\n                        s_taskCount: s_taskCount[index4],\n                        avgTaskCount: avgTaskCount,\n                        s_pFC: s_pFC[index4],\n                        avgpowerFailureCount: avgpowerFailureCount\n                    }\n                );\n                console.log( s_pFC[0] < avgpowerFailureCount)\n                console.log( s_pFC[0] > avgpowerFailureCount)\n                if (equation.adaptUp.includes(\">\") && equation.adaptDown.includes(\"<\")) {\n                    if (shouldAdaptUp1 > shouldAdaptUp2) {\n                        adaptUp();\n                    }\n                    else if (shouldAdaptDown1 < shouldAdaptDown2) {\n                        adaptDown();\n                    }\n                } else if (equation.adaptUp.includes(\"<\") && equation.adaptDown.includes(\">\")) {\n                    if (shouldAdaptUp1 < shouldAdaptUp2) {\n                        adaptUp();\n                    }\n                    else if (shouldAdaptDown1 > shouldAdaptDown2) {\n                        adaptDown();\n                    }\n                } else if (equation.adaptUp.includes(\">\") && equation.adaptDown.includes(\">\")) {\n                    if (shouldAdaptUp1 > shouldAdaptUp2) {\n                        adaptUp();\n                    }\n                    else if (shouldAdaptDown1 > shouldAdaptDown2) {\n                        adaptDown();\n                    }\n                } else if (equation.adaptUp.includes(\"<\") && equation.adaptDown.includes(\"<\")) {\n                    if (shouldAdaptUp1 < shouldAdaptUp2) {\n                        adaptUp();\n                    }\n                    else if (shouldAdaptDown1 < shouldAdaptDown2) {\n                        adaptDown();\n                    }\n                }\n            }\n\n            // if (equation.term1 === \"onTimeHistory\") {\n            //     if (s_onTime[0] > avgOnTime) {\n            //         adaptDown();\n            //     }\n            //     else if (s_onTime[0] < avgOnTime) {\n            //         adaptUp();\n            //     }\n            // }\n\n            // if (equation.term1 === \"offTimeHistory\") {\n            //     if (s_offTime[0] > avgOffTime) {\n            //         adaptDown();\n            //     }\n            //     else if (s_offTime[0] < avgOffTime) {\n            //         adaptUp();\n            //     }\n            // }\n\n            // if (equation.term1 === \"appCompletionTimeHistory\") {\n            //     if (s_appCompTime[0] > 1000) { // this is checking milli-seconds\n            //         adaptDown();\n            //     }\n            //     else if (s_appCompTime[0] < avgAppCompletionTime) {\n            //         adaptUp();\n            //     }\n            // }\n\n            // if (equation.term1 === \"taskCountHistory\") {\n            //     if (s_taskCount[0] < avgTaskCount) {\n            //         adaptDown();\n            //     }\n            //     else if (s_taskCount[0] > avgTaskCount) {\n            //         adaptUp();\n            //     }\n            // }\n\n            // if (equation.term1 === \"powerFailureCountHistory\") {\n            //     if (s_pFC[0] > avgpowerFailureCount) {\n            //         adaptDown();\n            //     }\n            //     else if (s_pFC[0] < avgpowerFailureCount) {\n            //         adaptUp();\n            //     }\n            // }\n\n            // Reset adaptation signals\n            onTime = 0;\n            offTime = 0;\n            appCompletionTime = 0;\n            taskCount = 0;\n            powerFailureCount = 0;\n            currentTaskNumber = 0;\n            currentTaskIterationNumber = 0;\n            currentTask = configuration.tasks[currentTaskNumber];\n            console.log(\"app completions\", appCompletions);\n        }\n\n    }\n\n    // Cleanup\n\n    const mlAccuracy = handleMLAccuracy();\n    const totalAvailableEnergy = findTotalEnergy(rawData) * 1000; //milli joules\n    totalConsumedEnergy = totalConsumedEnergy * 1000; //milli joules\n    const roundedAccuracy = mlAccuracy.toFixed(2);\n    console.log(\"Total Available Energy: \", totalAvailableEnergy);\n    console.log(\"Total Energy Consumed: \", totalConsumedEnergy);\n    console.log(\"Total Power Failures: \", totalPowerFailures);\n    console.log(\"Total Tasks Executed: \", totalTasksExecuted);\n    console.log(\"average accuracy of all classifications\", roundedAccuracy)\n\n    // Return\n\n    return ({\n        totalAvailableEnergy: totalAvailableEnergy, // Available Energy\n        totalConsumedEnergy: totalConsumedEnergy, // Consumed Energy\n        totalTasksExecuted: totalTasksExecuted, // Tasks Executed\n        appCompletions: appCompletions, // App Completions\n        totalPowerFailures: totalPowerFailures, // Power Failutes\n        mlAccuracy: roundedAccuracy, // Average Accuracy\n        onTimeAccuracy: onTimeAccuracy,\n        offTimeAccuracy: offTimeAccuracy\n    })\n\n}\n\nexport default Main","import HighEnergy from '../misc/high-energy.csv';\nimport LowEnergy from '../misc/low-energy.csv';\nimport Random from '../misc/random.csv';\nimport MovingFast from '../misc/moving-fast-energy.csv';\nimport MovingSlow from '../misc/moving-slow-energy.csv';\nimport csv2array from './CSVToArray';\n\nasync function Main(csv) {\n\n    // Initial Values\n    let rawData;\n    let time = [];\n    let mpp = [];\n\n    // Handles CSV Data\n    async function getData() {\n        if (csv === \"High-Energy\") {\n            const response = await fetch(HighEnergy);\n            const table = await response.text();\n            rawData = csv2array(table);\n        } else if (csv === \"Low-Energy\") {\n            const response = await fetch(LowEnergy);\n            const table = await response.text();\n            rawData = csv2array(table);\n        } else if (csv === \"Random\") {\n            const response = await fetch(Random);\n            const table = await response.text();\n            rawData = csv2array(table);\n        } else if (csv === \"Moving-Fast\") {\n            const response = await fetch(MovingFast);\n            const table = await response.text();\n            rawData = csv2array(table);\n        } else if (csv === \"Moving-Slow\") {\n            const response = await fetch(MovingSlow);\n            const table = await response.text();\n            rawData = csv2array(table);\n        }\n    }\n\n    const findMaxPowerPoint = (input) => {\n        let i = 0;\n        let temp_time = [];\n        let voltage = [];\n        let current = [];\n        input.forEach((item, index, array) => {\n            temp_time.push(item[0]);\n            voltage.push(item[1]);\n            current.push(item[2]);\n            i = i + 1;\n            if (i === 512) {\n                time.push(Math.max.apply(Math, temp_time));\n                mpp.push(Math.max.apply(Math, dotProduct(zipArray(voltage, current))));\n                voltage = [];\n                current = [];\n                i = 0;\n            }\n        })\n    }\n\n    const zipArray = (array1, array2) => {\n        const zipArray = array1.map(function (e, i) {\n            return [e, array2[i]];\n        });\n        return zipArray;\n    }\n\n    const dotProduct = (array) => {\n        const dotProduct = array.map((item) => {\n            return [(item[0] * item[1])];\n        })\n        return dotProduct;\n    }\n\n    const formatData = (input) => {\n        const data = []\n        input.forEach((item, index, array) => {\n            data.push({ Time: item[0], Power: item[1]*1000 })\n        })\n        return data\n    }\n\n    // Script\n    await getData();\n    findMaxPowerPoint(rawData);\n    const data = zipArray(time, mpp);\n    const formattedData = formatData(data);\n    return formattedData;\n\n}\n\nexport default Main\n","import React, { PureComponent } from 'react';\nimport GraphScript from '../scripts/GraphScript'\nimport { ComposedChart, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } from 'recharts';\n\nexport default class Example extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            onTimeAccuracy: [],\n            offTimeAccuracy: []\n        };\n        this.onTimeAccuracy = props.onTimeAccuracy;\n        this.offTimeAccuracy = props.offTimeAccuracy;\n        this.csv = props.csv;\n    }\n\n    componentDidMount() {\n        GraphScript(this.csv).then((response) => { this.setState({ data: response }); console.log(response) });\n        this.setState({ onTimeAccuracy: this.props.offTimeAccuracy });\n        this.setState({ onTimeAccuracy: this.props.offTimeAccuracy });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.csv !== this.props.csv || prevProps.onTimeAccuracy !== this.props.onTimeAccuracy || prevProps.offTimeAccuracy !== this.props.offTimeAccuracy) {\n            GraphScript(this.props.csv).then((response) => { this.setState({ data: response }); console.log(response) });\n        }\n        if (prevProps.onTimeAccuracy !== this.props.onTimeAccuracy) {\n            this.setState({ onTimeAccuracy: this.props.onTimeAccuracy });\n        }\n        if (prevProps.offTimeAccuracy !== this.props.offTimeAccuracy || prevProps.onTimeAccuracy !== this.props.onTimeAccuracy) {\n            this.setState({ onTimeAccuracy: this.props.onTimeAccuracy, offTimeAccuracy: this.props.offTimeAccuracy });\n        }\n        console.log(this.state)\n    }\n\n    render() {\n        return (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <ComposedChart\n                    width={500}\n                    height={300}\n                    margin={{\n                        top: 5,\n                        right: 0,\n                        left: 0,\n                        bottom: 10,\n                    }}\n                >\n                    <defs>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#2AB06E\" stopOpacity={0.8} />\n                            <stop offset=\"95%\" stopColor=\"#2AB06E\" stopOpacity={0.4} />\n                        </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"Time\" type=\"number\" domain={['dataMin', 'dataMax']} ticks={[15, 30, 45, 60]}>\n                        <Label value=\"Time\" offset={-5} position=\"insideBottom\" />\n                    </XAxis>\n                    <YAxis>\n                        <Label value=\"Power (mW)\" offset={0} position=\"middle\" angle={-90} />\n                    </YAxis>\n                    <YAxis yAxisId=\"right\" orientation=\"right\" domain={[0, 100]}>\n                        <Label value=\"Accuracy (%)\" offset={0} position=\"middle\" angle={-90} />\n                    </YAxis>\n                    <Tooltip />\n                    <Legend verticalAlign=\"top\" height={36} />\n                    <Area data={this.state.data} type=\"monotone\" dataKey=\"Power\" stroke=\"#2AB06E\" fillOpacity={1} fill=\"url(#colorPv)\" activeDot={{ r: 2 }} />\n                    <Line yAxisId=\"right\" data={this.state.onTimeAccuracy} type=\"monotone\" dataKey=\"adaptedAccuracy\" stroke=\"#E33737\" strokeWidth={0.5} />\n                    <Line yAxisId=\"right\" data={this.state.offTimeAccuracy} type=\"monotone\" dataKey=\"originalAccuracy\" stroke=\"#5559D9\" strokeWidth={0.5} />\n                </ComposedChart>\n            </ResponsiveContainer>\n        );\n    }\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport Graph from './components/Graph';\nimport MNIST from './config/mnist.json';\nimport ReactFlow, { Controls, Background } from 'react-flow-renderer';\nimport SimulationScript from './scripts/SimulationScript';\n\nimport { Slider, IconButton, TextField, Button, FormControlLabel, Switch, Dialog, DialogActions, DialogTitle, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { BsGear } from \"react-icons/bs\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PropTypes from 'prop-types';\n\nimport 'katex/dist/katex.min.css';\nimport { BlockMath } from 'react-katex';\nimport { parse } from 'mathjs'\n\nfunction App() {\n\n  let elements = [];\n  const JSONdata = MNIST;\n  const [CSV, setCSV] = useState(\"Moving-Fast\");\n  const [adaptationStrategy, setAdaptationStrategy] = useState(JSONdata.adaptationStrategy[0]);\n  const [tasks, setTasks] = useState(adaptationStrategy.tasks);\n  const [knobs, setKnobs] = useState(adaptationStrategy.adaptiveVariables);\n  const [flowChart, setFlowChart] = useState([]);\n\n  const [totalAvailableEnergy, setTotalAvailableEnergy] = useState(0); //mJ\n  const [totalConsumedEnergy, setTotalConsumedEnergy] = useState(0); //mJ\n  const [totalTasksExecuted, setTotalTasksExecuted] = useState(0);\n  const [totalPowerFailures, setTotalPowerFailures] = useState(0);\n  const [appCompletions, setAppCompletions] = useState(0);\n  const [accuracy, setAccuracy] = useState(0);\n  const [onTimeAccuracy, setOnTimeAccuracy] = useState([]);\n  const [offTimeAccuracy, setOffTimeAccuracy] = useState([]);\n\n  const [actualEquation1, setActualEquation1] = useState(\"\");\n  const [actualEquation2, setActualEquation2] = useState(\"\");\n  const [LaTeXEquation1, setLaTeXEquation1] = useState(String.raw`\\mathit{if}\\ (\\mathit{s\\_off}_{n} - \\epsilon) < \\frac{1}{n}\\sum_{i=1}^{n-1} \\mathit{s\\_off}_{i}`);\n  const [LaTeXEquation2, setLaTeXEquation2] = useState(String.raw`\\mathit{if}\\ (\\mathit{s\\_off}_{n} + \\epsilon) > \\frac{1}{n}\\sum_{i=1}^{n-1} \\mathit{s\\_off}_{i}`);\n\n  const [showModal, setShowModal] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n  const [histArraySize, setHistArraySize] = useState(0);\n  const [stepSize, setStepSize] = useState(0);\n  let adapt = false;\n\n  useEffect(() => {\n    getElements();\n    setFlowChart(elements);\n  }, [])\n\n  // Initializes and Arranges Task Map\n  const getElements = async () => {\n    let x = 150;\n    let y = 50;\n    tasks.map((item, index, array) => {\n      if (index === 0) {\n        elements.push({\n          id: index + 1,\n          //type: 'input', // input node\n          data: { label: item.taskName },\n          position: { x: x + 500, y: y },\n          sourcePosition: 'right',\n          targetPosition: 'bottom',\n          style: { backgroundColor: '#E8E8FC', borderRadius: 10, padding: 40, fontSize: 9, fontWeight: 'bold' }\n        }, {\n          id: 'arrow' + index + 1,\n          type: 'default',\n          source: index + 1,\n          target: index + 2,\n          arrowHeadType: 'arrowclosed',\n          animated: true,\n          style: { stroke: '#ffffff', strokeWidth: 3 },\n        });\n      } else if (index + 1 === tasks.length) {\n        if (x === 150) x = 400;\n        else if (x === 400) x = 150;\n        y = y + 100;\n        elements.push({\n          id: index + 1,\n          //type: 'output', // input node\n          data: { label: item.taskName },\n          position: { x: x, y: y },\n          sourcePosition: 'right',\n          targetPosition: 'top',\n          style: { backgroundColor: '#E8E8FC', borderRadius: 10, padding: 40, fontSize: 9, fontWeight: 'bold' }\n        }, {\n          id: 'arrow' + index + 1,\n          type: 'default',\n          source: index + 1,\n          target: 1,\n          arrowHeadType: 'arrowclosed',\n          animated: true,\n          style: { stroke: '#ffffff', strokeWidth: 3 },\n        });\n      } else {\n        if (x === 150) x = 400;\n        else if (x === 400) x = 150;\n        y = y + 100;\n        elements.push({\n          id: index + 1,\n          data: { label: item.taskName },\n          position: { x: x, y: y },\n          sourcePosition: 'right',\n          targetPosition: 'top',\n          style: { backgroundColor: '#E8E8FC', borderRadius: 10, padding: 40, fontSize: 9, fontWeight: 'bold' }\n        }, {\n          id: 'arrow' + index + 1,\n          type: 'default',\n          source: index + 1,\n          target: index + 2,\n          arrowHeadType: 'arrowclosed',\n          animated: true,\n          style: { stroke: '#ffffff', strokeWidth: 3 },\n        })\n      }\n    })\n  }\n\n  // Initializes Custom Sliders\n  const iOSBoxShadow = \" 0px 2px 4px 0px #000000\";\n  function ValueLabelComponent(props) {\n    const { children, open, value } = props;\n    return (\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n        {children}\n      </Tooltip>\n    );\n  }\n  ValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  const PrettoSlider = withStyles({\n    root: {\n      color: '#0058FF',\n      height: 8,\n    },\n    thumb: {\n      height: 24,\n      width: 24,\n      backgroundColor: '#fff',\n      border: '2px solid currentColor',\n      marginTop: -10,\n      marginLeft: -12,\n      '&:focus, &:hover, &$active': {\n        boxShadow: 'inherit',\n      },\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      height: 8,\n      borderRadius: 8,\n    },\n    rail: {\n      height: 8,\n      borderRadius: 8,\n      backgroundColor: \"#000000\",\n      boxShadow: iOSBoxShadow,\n    },\n  })(Slider);\n\n  // Handles AdaptUp Equation Changes\n  const handleAdaptUp = (event) => {\n    console.log(event.target.value)\n    setActualEquation1(event.target.value)\n    //  const parced = parse(event.target.value).toTex()\n    // setLaTeXEquation1(String.raw`\\mathit{if}\\ ${parced}`)\n  }\n\n  // Handles AdaptDown Equation Changes\n  const handleAdaptDown = (event) => {\n    console.log(event.target.value)\n    setActualEquation2(event.target.value)\n    // const parced = parse(event.target.value).toTex()\n    // setLaTeXEquation2(String.raw`\\mathit{if}\\ ${parced}`)\n  }\n\n  const commitAdaptUp = () => {\n    const parced = parse(actualEquation1).toTex()\n    setLaTeXEquation1(String.raw`\\mathit{if}\\ ${parced}`)\n  }\n\n  const commitAdaptDown = () => {\n    const parced = parse(actualEquation2).toTex()\n    setLaTeXEquation2(String.raw`\\mathit{if}\\ ${parced}`)\n  }\n\n  // Excecutes Simulation Script\n  const executeScript = () => {\n    const equation = { adaptUp: actualEquation1, adaptDown: actualEquation2 }\n    setShowLoading(true);\n    const parced1 = parse(actualEquation1).toTex()\n    setLaTeXEquation1(String.raw`\\mathit{if}\\ ${parced1}`)\n    const parced2 = parse(actualEquation2).toTex()\n    setLaTeXEquation2(String.raw`\\mathit{if}\\ ${parced2}`)\n    console.log(histArraySize)\n    console.log(stepSize)\n    console.log(adapt)\n    SimulationScript(histArraySize, stepSize, equation, adapt, CSV).then((response) => {\n      console.log(response)\n      setAppCompletions(response.appCompletions);\n      setAccuracy(response.mlAccuracy);\n      setTotalAvailableEnergy(response.totalAvailableEnergy);\n      setTotalConsumedEnergy(response.totalConsumedEnergy);\n      setTotalTasksExecuted(response.totalTasksExecuted);\n      setTotalPowerFailures(response.totalTasksExecuted);\n      setOnTimeAccuracy(response.onTimeAccuracy);\n      setOffTimeAccuracy(response.offTimeAccuracy);\n      setShowLoading(false);\n    })\n  }\n\n  return (\n    <>\n\n      <div style={showLoading ? { pointerEvents: \"none\", opacity: \"0.5\" } : {}}>\n\n        {/* Task Map */}\n        <div style={{ flex: 1, position: 'absolute', width: '68%', height: '70%', left: 0, top: 0, backgroundColor: '#69AA83', boxShadow: \"inset 0px 0px 20px 0px #ffffff\" }}>\n          <ReactFlow elements={flowChart} arrowHeadColor={\"#ffffff\"}>\n            <Controls />\n            <Background\n              variant=\"dots\"\n              gap={16}\n              size={1}\n            />\n          </ReactFlow>\n        </div>\n\n        {/* Knobs */}\n        <div style={{ flex: 1, position: 'absolute', width: '32%', height: '70%', right: 0, top: 0 }}>\n          <div style={{ flex: 1, padding: 30, height: '93%' }}>\n            <div style={{ flex: 1, flexDirection: 'row', marginTop: 10 }}>\n              <div style={{ fontFamily: \"GemunuLibre-ExtraBold\", fontSize: 45, fontWeight: '600', textAlign: 'center' }}>Configuration</div>\n              <IconButton style={{ marginLeft: '90%', top: -45 }} onClick={() => setShowModal(!showModal)}>\n                <BsGear size={24} color='#7F8489' />\n              </IconButton>\n            </div>\n            <div style={{ justifyContent: 'center', alignItems: 'center', textAlign: 'center', fontSize: 25, fontFamily: \"GemunuLibre-SemiBold\", textDecoration: 'underline', marginBottom: '2%' }}>\n              Step 1: Adjust Knobs\n            </div>\n            <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" value={histArraySize} max={8} onChange={(event, value) => { setHistArraySize(value) }} onChangeCommitted={(event, value) => { setHistArraySize(value) }} />\n            <div style={{ flex: 1, fontFamily: \"GemunuLibre-Light\", fontSize: 20, textAlign: 'center', marginBottom: 25 }}>History Array Size</div>\n            <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" value={stepSize} max={8} onChange={(event, value) => { setStepSize(value) }} onChangeCommitted={(event, value) => { setStepSize(value) }} />\n            <div style={{ flex: 1, fontFamily: \"GemunuLibre-Light\", fontSize: 20, textAlign: 'center', marginBottom: 25 }}>Adaptation Step Size</div>\n            <div style={{ justifyContent: 'center', alignItems: 'center', textAlign: 'center', fontSize: 25, fontFamily: \"GemunuLibre-SemiBold\", textDecoration: 'underline', marginBottom: '2%', marginTop: '5%' }}>\n              Step 2: Enter Heuristic Equation\n            </div>\n            <div style={{ marginTop: '2%', borderWidth: 2, borderColor: \"#000\", borderStyle: 'solid', borderRadius: 5 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 20, textAlign: 'center', fontWeight: 'bold', marginTop: '2%' }}>Adapt Up</div>\n              <BlockMath>{LaTeXEquation1}</BlockMath>\n              <div style={{ display: 'inline' }}>\n                <TextField label=\"Adapt Up\" variant=\"filled\" style={{ width: '100%' }} onChange={(event) => handleAdaptUp(event)} onKeyPress={(ev) => { if (ev.key === 'Enter') commitAdaptUp() }}></TextField>\n              </div>\n            </div>\n            <div style={{ marginTop: '1%', borderWidth: 2, borderColor: \"#000\", borderStyle: 'solid', borderRadius: 5 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 20, textAlign: 'center', fontWeight: 'bold', marginTop: '2%' }}>Adapt Down</div>\n              <BlockMath>{LaTeXEquation2}</BlockMath>\n              <div style={{ display: 'inline' }}>\n                <TextField label=\"Adapt Down\" variant=\"filled\" style={{ width: '100%' }} onChange={(event) => handleAdaptDown(event)} onKeyPress={(ev) => { if (ev.key === 'Enter') commitAdaptDown() }}></TextField>\n              </div>\n            </div>\n            <div style={{ justifyContent: 'center', alignItems: 'center', textAlign: 'center', fontSize: 25, fontFamily: \"GemunuLibre-SemiBold\", textDecoration: 'underline', marginBottom: '2%', marginTop: '5%' }}>\n              Step 3: Check Adaptation and Run\n            </div>\n            <div style={{ flexDirection: 'row', marginLeft: '32%' }}>\n              <FormControlLabel\n                control={<Switch size={'medium'} color=\"primary\" onChange={() => adapt = !adapt} />}\n                label=\"Adapt\"\n              />\n              <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={() => executeScript()} >\n                Execute\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Statistics */}\n        <div style={{ flex: 1, position: 'absolute', width: '30%', height: '30%', right: 0, bottom: 0 }}>\n          <div style={{ flex: 1, padding: 30 }}>\n            <div style={{ flex: 1, fontFamily: \"GemunuLibre-ExtraBold\", fontSize: 45, textAlign: 'center' }}>Statistics</div>\n            <div style={{ flexDirection: 'row', marginTop: 20 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline' }}>App Completions:</div>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline', marginLeft: '40%' }}>{appCompletions}</div>\n            </div>\n            <div style={{ flexDirection: 'row', marginTop: 20 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline' }}>Accuracy:</div>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline', marginLeft: '50%' }}>{accuracy}%</div>\n            </div>\n            <div style={{ flexDirection: 'row', marginTop: 20 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline' }}>Total Available Energy:</div>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline', marginLeft: '34%' }}>{totalAvailableEnergy}mJ</div>\n            </div>\n            <div style={{ flexDirection: 'row', marginTop: 20 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline' }}>Total Consumed Energy:</div>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline', marginLeft: '33%' }}>{totalConsumedEnergy}mJ</div>\n            </div>\n            <div style={{ flexDirection: 'row', marginTop: 20 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline' }}>Total Tasks Executed:</div>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline', marginLeft: '36%' }}>{totalTasksExecuted}</div>\n            </div>\n            <div style={{ flexDirection: 'row', marginTop: 20 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline' }}>Total Power Failures:</div>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 25, display: 'inline', marginLeft: '37%' }}>{totalPowerFailures}</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Chart */}\n        <div style={{ flex: 1, position: 'absolute', width: '70%', height: '30%', left: 0, bottom: 0 }}>\n          <Graph onTimeAccuracy={onTimeAccuracy} offTimeAccuracy={offTimeAccuracy} csv={CSV} />\n        </div>\n\n        {/* Modal */}\n        <Dialog open={showModal} onClose={() => setShowModal(false)} aria-labelledby=\"max-width-dialog-title\" fullWidth={true} maxWidth={\"md\"}>\n          <DialogTitle id=\"form-dialog-title\">Settings</DialogTitle>\n          <InputLabel id=\"demo-simple-select-label\">CSV Energy Profile</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            placeholder={\"CSV Energy Profile\"}\n            id=\"demo-simple-select\"\n            value={CSV}\n            onChange={(event) => setCSV(event.target.value)}\n          >\n            <MenuItem value={\"High-Energy\"}>High Energy</MenuItem>\n            <MenuItem value={\"Low-Energy\"}>Low Energy</MenuItem>\n            <MenuItem value={\"Random\"}>Random</MenuItem>\n            <MenuItem value={\"Moving-Fast\"}>Moving Fast</MenuItem>\n            <MenuItem value={\"Moving-Slow\"}>Moving Slow</MenuItem>\n          </Select>\n          <DialogActions>\n            <Button onClick={() => setShowModal(false)} color=\"primary\">\n              Save\n            </Button>\n            <Button onClick={() => setShowModal(false)} color=\"primary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n      </div >\n\n      {/* Loading */}\n      {/* {showLoading ?\n        <div style={{ position: 'absolute', left: '50%', top: '40%' }}>\n          <CircularProgress\n            size={300}\n          />\n        </div>\n        : null\n      } */}\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","function csv2array(data, delimeter) {\n    // Retrieve the delimeter\n    if (delimeter == undefined) \n      delimeter = ',';\n    if (delimeter && delimeter.length > 1)\n      delimeter = ',';\n  \n    // initialize variables\n    var newline = '\\n';\n    var eof = '';\n    var i = 0;\n    var c = data.charAt(i);\n    var row = 0;\n    var col = 0;\n    var array = new Array();\n  \n    while (c != eof) {\n      // skip whitespaces\n      while (c == ' ' || c == '\\t' || c == '\\r') {\n        c = data.charAt(++i); // read next char\n      }\n      \n      // get value\n      var value = \"\";\n      if (c == '\\\"') {\n        // value enclosed by double-quotes\n        c = data.charAt(++i);\n        \n        do {\n          if (c != '\\\"') {\n            // read a regular character and go to the next character\n            value += c;\n            c = data.charAt(++i);\n          }\n          \n          if (c == '\\\"') {\n            // check for escaped double-quote\n            var cnext = data.charAt(i+1);\n            if (cnext == '\\\"') {\n              // this is an escaped double-quote. \n              // Add a double-quote to the value, and move two characters ahead.\n              value += '\\\"';\n              i += 2;\n              c = data.charAt(i);\n            }\n          }\n        }\n        while (c != eof && c != '\\\"');\n        \n        if (c == eof) {\n          throw \"Unexpected end of data, double-quote expected\";\n        }\n  \n        c = data.charAt(++i);\n      }\n      else {\n        // value without quotes\n        while (c != eof && c != delimeter && c!= newline && c != ' ' && c != '\\t' && c != '\\r') {\n          value += c;\n          c = data.charAt(++i);\n        }\n      }\n  \n      // add the value to the array\n      if (array.length <= row) \n        array.push(new Array());\n      array[row].push(value);\n      \n      // skip whitespaces\n      while (c == ' ' || c == '\\t' || c == '\\r') {\n        c = data.charAt(++i);\n      }\n  \n      // go to the next row or column\n      if (c == delimeter) {\n        // to the next column\n        col++;\n      }\n      else if (c == newline) {\n        // to the next row\n        col = 0;\n        row++;\n      }\n      else if (c != eof) {\n        // unexpected character\n        throw \"Delimiter expected after character \" + i;\n      }\n      \n      // go to the next character\n      c = data.charAt(++i);\n    }  \n    \n    return array;\n  }\n\n  export default csv2array "],"sourceRoot":""}