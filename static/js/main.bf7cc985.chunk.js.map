{"version":3,"sources":["misc/test.csv","scripts/CSVToArray.js","scripts/SimulationScript.js","scripts/GraphScript.js","components/Graph.js","images/Hawaii.png","App.js","index.js"],"names":["csv2array","data","delimeter","undefined","length","i","c","charAt","row","array","Array","value","push","col","Main","histArraySize","stepSize","equation","adapt","getData","a","fetch","File","response","text","table","rawData","configuration","MNIST","adaptationStrategy","capacitance","newVoltage","oldVoltage","current","simulationTime","hasBeenMax","timeArray","accuracyArray","onTimeAccuracy","offTimeAccuracy","bootTime","executedTasks","currentTask","tasks","currentTaskNumber","currentTaskIterationNumber","adaptiveVariables","equation1","adaptUp","split","equation2","pop","equation3","adaptDown","equation4","index1","index2","index3","index4","console","log","includes","one","substr","lastIndexOf","match","parseInt","two","three","four","onTime","avgOnTime","s_onTime","fill","offTime","avgOffTime","s_offTime","appCompletionTime","avgAppCompletionTime","s_appCompTime","taskCount","avgTaskCount","s_taskCount","powerFailureCount","avgpowerFailureCount","s_pFC","lowerAdaptationThreshold","upperAdaptationThreshold","adaptationStepSize","upperThresholdVoltage","lowerThresholdVoltage","stepTime","appCompletions","appCompleted","initializeAdaptiveVariables","variables","adaptiveVariablesValues","average","list","reduce","prev","curr","executeTasks","energy","availableEnergy","taskIterations","adaptiveVars","window","eval","energyPerItr","time","taskWeight","taskName","nextTask","calculateEnergy","calculateNewVoltage","v","t","calculateRemainingVoltage","Math","sqrt","voltage","findClosestValue","arr","val","closestValue","abs","extractTimeArray","newTimeArray","filteredArray","filter","_","extractVoltageArray","newVoltageArray","j","findCurrentNow","findAccuracyNow","skipRows","skipColumns","accuracyMapString","accuracyMapValue","accuracyMap","handleMLAccuracy","b","closestTimestamp","voltageArray","closestVoltage","usefulEnergy","remainingUsefulEnergy","initOverheadEnergy","totalRemainingEnergy","unshift","slice","Accuracy","Time","shouldAdaptUp1","evaluate","shouldAdaptUp2","shouldAdaptDown1","shouldAdaptDown2","mlAccuracy","roundedAccuracy","toFixed","mpp","findMaxPowerPoint","input","temp_time","forEach","item","index","max","apply","dotProduct","zipArray","array1","array2","map","e","formatData","Power","formattedData","Example","props","state","data1","data2","GraphScript","then","setState","this","ResponsiveContainer","width","height","ComposedChart","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","XAxis","dataKey","type","domain","ticks","Label","position","YAxis","angle","yAxisId","orientation","Tooltip","Legend","verticalAlign","Area","stroke","fillOpacity","activeDot","r","Line","strokeWidth","PureComponent","App","elements","JSONdata","useState","flowChart","setFlowChart","setAppCompletions","accuracy","setAccuracy","setOnTimeAccuracy","setOffTimeAccuracy","actualEquation1","setActualEquation1","actualEquation2","setActualEquation2","String","raw","LaTeXEquation1","setLaTeXEquation1","LaTeXEquation2","setLaTeXEquation2","showModal","setShowModal","showLoading","setShowLoading","setHistArraySize","setStepSize","useEffect","getElements","x","y","label","sourcePosition","targetPosition","style","backgroundColor","borderRadius","padding","fontSize","fontWeight","source","target","arrowHeadType","animated","PrettoSlider","withStyles","root","color","thumb","border","marginTop","marginLeft","boxShadow","active","valueLabel","track","rail","Slider","pointerEvents","opacity","flex","arrowHeadColor","variant","gap","size","flexDirection","fontFamily","textAlign","IconButton","onClick","justifyContent","alignItems","textDecoration","marginBottom","valueLabelDisplay","aria-label","onChange","event","onChangeCommitted","borderWidth","borderColor","borderStyle","display","TextField","handleAdaptUp","onKeyPress","ev","key","parced","parse","toTex","commitAdaptUp","handleAdaptDown","commitAdaptDown","FormControlLabel","control","Switch","Button","SimulationScript","executeScript","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogActions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIAAe,QAA0B,kC,iCC+FxBA,IA/FjB,SAAmBC,EAAMC,QAEJC,GAAbD,IACFA,EAAY,KACVA,GAAaA,EAAUE,OAAS,IAClCF,EAAY,KAWd,IARA,IAEIG,EAAI,EACJC,EAAIL,EAAKM,OAAOF,GAChBG,EAAM,EAENC,EAAQ,IAAIC,MALN,IAOHJ,GAAU,CAEf,KAAY,KAALA,GAAiB,MAALA,GAAkB,MAALA,GAC9BA,EAAIL,EAAKM,SAASF,GAIpB,IAAIM,EAAQ,GACZ,GAAS,KAALL,EAAW,CAEbA,EAAIL,EAAKM,SAASF,GAElB,EAAG,CAOD,GANS,KAALC,IAEFK,GAASL,EACTA,EAAIL,EAAKM,SAASF,IAGX,KAALC,EAGW,KADDL,EAAKM,OAAOF,EAAE,KAIxBM,GAAS,IACTN,GAAK,EACLC,EAAIL,EAAKM,OAAOF,UAlChB,IAsCCC,GAAiB,KAALA,GAEnB,GAxCM,IAwCFA,EACF,KAAM,gDAGRA,EAAIL,EAAKM,SAASF,QAIlB,KAhDM,IAgDCC,GAAYA,GAAKJ,GAjDd,MAiD2BI,GAAoB,KAALA,GAAiB,MAALA,GAAkB,MAALA,GAC3EK,GAASL,EACTA,EAAIL,EAAKM,SAASF,GAUtB,IALII,EAAML,QAAUI,GAClBC,EAAMG,KAAK,IAAIF,OACjBD,EAAMD,GAAKI,KAAKD,GAGJ,KAALL,GAAiB,MAALA,GAAkB,MAALA,GAC9BA,EAAIL,EAAKM,SAASF,GAIpB,GAAIC,GAAKJ,EAEPW,OAEG,GAtEO,MAsEHP,EAED,EACNE,SAEG,GA1EG,IA0ECF,EAEP,KAAM,sCAAwCD,EAIhDC,EAAIL,EAAKM,SAASF,GAGpB,OAAOI,I,6lCCvFIK,K,uZAAf,kBAAoBC,cAAeC,SAAUC,SAAUC,OAAvD,gqBAgHmBC,QAhHnB,krBAAAC,EAAA,wcAAAA,EAAA,MAgHI,qLAAAA,EAAA,sEAC2BC,MAAMC,+CADjC,cACUC,EADV,gBAEwBA,EAASC,OAFjC,OAEUC,EAFV,OAGIC,QAAU1B,mDAAUyB,GAHxB,4CAhHJ,uBAgHmBN,QAhHnB,kDAGUQ,cAAgBC,gDAAMC,mBAAmB,GAGzCC,YAAc,KAChBC,WAAa,EACbC,WAAa,EACbC,QAAU,EACVC,eAAiB,EACjBC,YAAa,EAIbC,UAAY,GACZC,cAAgB,GAChBC,eAAiB,GACjBC,gBAAkB,GAGlBC,SAAW,EACXC,eAAgB,EAChBC,YAAcf,cAAcgB,MAAM,GAClCC,kBAAoB,EACpBC,2BAA6B,EAC7BC,kBAAoBnB,cAAcmB,kBAGlCC,UAAY9B,SAAS+B,QAAQC,MAAM,KAAK,GACxCC,UAAYjC,SAAS+B,QAAQC,MAAM,KAAKE,MACxCC,UAAYnC,SAASoC,UAAUJ,MAAM,KAAK,GAC1CK,UAAYrC,SAASoC,UAAUJ,MAAM,KAAKE,MAG1CI,OAAS,EACTC,OAAS,EACTC,OAAS,EACTC,OAAS,EACbC,QAAQC,IAAI,WAAYb,UAAUc,SAAS,MACvCd,UAAUc,SAAS,OACbC,IAAMf,UAAUE,MAAM,KAAKE,MAAMF,MAAM,KAAK,GAClDF,UAAYA,UAAUgB,OAAO,EAAGhB,UAAUiB,YAAY,MAElDT,OADAO,IAAIG,MAAM,YACD,EAEAC,SAASJ,MAEpBZ,UAAUW,SAAS,OACfM,IAAMjB,UAAUD,MAAM,KAAKE,MAAMF,MAAM,KAAK,GAClDC,UAAYA,UAAUa,OAAO,EAAGb,UAAUc,YAAY,MAElDR,OADAW,IAAIF,MAAM,YACD,EAEAC,SAASC,MAEpBf,UAAUS,SAAS,OACfO,MAAQhB,UAAUH,MAAM,KAAKE,MAAMF,MAAM,KAAK,GACpDG,UAAYA,UAAUW,OAAO,EAAGX,UAAUY,YAAY,MAElDP,OADAW,MAAMH,MAAM,YACH,EAEAC,SAASE,QAEpBd,UAAUO,SAAS,OACfQ,KAAOf,UAAUL,MAAM,KAAKE,MAAMF,MAAM,KAAK,GACnDK,UAAYA,UAAUS,OAAO,EAAGT,UAAUU,YAAY,MAElDN,OADAW,KAAKJ,MAAM,YACF,EAEAC,SAASG,OAKtBC,OAAS,EACTC,UAAY,EACZC,SAAW,IAAI9D,MAAMK,cAAgB,GAAG0D,KAAK,GAE7CC,QAAU,EACVC,WAAa,EACbC,UAAY,IAAIlE,MAAMK,cAAgB,GAAG0D,KAAK,GAE9CI,kBAAoB,EACpBC,qBAAuB,EACvBC,cAAgB,IAAIrE,MAAMK,cAAgB,GAAG0D,KAAK,GAElDO,UAAY,EACZC,aAAe,EACfC,YAAc,IAAIxE,MAAMK,cAAgB,GAAG0D,KAAK,GAEhDU,kBAAoB,EACpBC,qBAAuB,EACvBC,MAAQ,IAAI3E,MAAMK,cAAgB,GAAG0D,KAAK,GAE1Ca,yBAA2B,EAC3BC,yBAA2B,EAC3BC,mBAAqBxE,SAGrByE,sBAAwB,IACxBC,sBAAwB,IAGxBC,SAAW,IAGXC,eAAiB,EACjBC,cAAe,EAUbC,4BAA8B,SAACC,GAEjC,IADA,IAAIC,EAA0B,GACrB3F,EAAI,EAAGA,EAAI0F,EAAU3F,OAAQC,IAClC2F,EAAwBD,EAAU1F,IAAM,EAE5C,OAAO2F,GAGLC,QAAU,SAAAC,GAAI,OAAIA,EAAKC,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,KAAQH,EAAK9F,QAElEkG,aAAe,SAAfA,aAAgBC,QAElB,IAAIC,gBAAkBD,OACtB,GAA0C,kBAA/B7D,YAAY+D,eAA6B,CAEhD,IADA,IAAIA,eACKpG,EAAI,EAAGA,EAAIqC,YAAYgE,aAAatG,OAAQC,IACjDsG,OAAOjE,YAAYgE,aAAarG,IAAM2F,wBAAwBtD,YAAYgE,aAAarG,IAG3F,OADAoG,eAAiBG,KAAKlE,YAAY+D,gBAC9BF,OAAS7D,YAAYmE,cACrBlB,SAAWjD,YAAYoE,KACvBN,gBAAkBD,OAAS7D,YAAYmE,aACvC7B,WAAwBtC,YAAYqE,WACpClE,4BAA0D,EACtD4D,gBAAkB5D,6BAClBc,QAAQC,IAAIlB,YAAYsE,UACxBrD,QAAQC,IAAI,uBAAwB1B,gBACP,cAAzBQ,YAAYuE,UACZpE,2BAA6B,EAC7BD,mBAAwC,EACxCF,YAAcf,cAAcgB,MAAMC,oBACF,cAAzBF,YAAYuE,WACnBpB,cAAe,IAGhBW,kBAEPb,SAAWjD,YAAYoE,MAAQN,gBAAkB9D,YAAYmE,cAC7D1E,YAAa,EACbgD,mBAAwC,EACxCqB,gBAAkBU,gBAAgBxB,uBAC3Bc,iBAGX,IAAMC,gBAAiB/D,YAAY+D,eACnC,OAAIF,OAAS7D,YAAYmE,cACrBlB,SAAWjD,YAAYoE,KACvBN,gBAAkBD,OAAS7D,YAAYmE,aACvC7B,WAAwBtC,YAAYqE,WACpClE,4BAA0D,EACtD4D,kBAAmB5D,6BACnBc,QAAQC,IAAIlB,YAAYsE,UACxBrD,QAAQC,IAAI,uBAAwB1B,gBACP,cAAzBQ,YAAYuE,UACZpE,2BAA6B,EAC7BD,mBAAwC,EACxCF,YAAcf,cAAcgB,MAAMC,oBACF,cAAzBF,YAAYuE,WACnBpB,cAAe,IAGhBW,kBAEPb,SAAWjD,YAAYoE,MAAQN,gBAAkB9D,YAAYmE,cAC7D1E,YAAa,EACbgD,mBAAwC,EACxCqB,gBAAkBU,gBAAgBxB,uBAC3Bc,kBAKbW,oBAAsB,SAACC,EAAG9G,EAAG+G,GAE/B,OADqB,EAAIvF,aAAiBxB,EAAM+G,GAAOD,GAIrDE,0BAA4B,SAACf,GAE/B,OADgBgB,KAAKC,KAAU,EAAI1F,YAAT,EAAyByE,IAIjDW,gBAAkB,SAACO,GAErB,MADmB,GAAQ3F,YAAgB2F,EAAYA,GAIrDC,iBA7MV,sVAAAtG,EAAA,MA6M6B,WAAOuG,EAAKC,GAAZ,sKAAAxG,EAAA,6DACfyG,EAAeF,EAAIxB,QAAO,SAAUC,EAAMC,GAC5C,OAAQkB,KAAKO,IAAIzB,EAAOuB,GAAOL,KAAKO,IAAI1B,EAAOwB,GAAOvB,EAAOD,KAF5C,kBAIdyB,GAJc,2CA7M7B,wDAoNUE,iBApNV,sVAAA3G,EAAA,MAoN6B,WAAOuG,GAAP,QAAAvG,EAAA,gKAAAA,EAAA,sDAGrB,IAFI4G,EAAe,GACfC,EAAgBN,EAAIO,QAAO,SAACC,EAAG9H,GAAJ,OAAUA,EAAI,KAAO,KAC3Ce,EAAI,EAAGA,EAAI6G,EAAc7H,OAAQgB,IACtC4G,EAAapH,KAAKqH,EAAc7G,GAAG,IAJlB,yBAMd4G,GANc,2CApN7B,sDA6NUI,oBA7NV,sVAAAhH,EAAA,MA6NgC,WAAOuG,EAAKb,GAAZ,0KAAA1F,EAAA,sDACpBiH,EAAkB,GACbhI,EAAI,EAFW,YAERA,EAAIsH,EAAIvH,QAFA,mBAGhBuH,EAAItH,GAAG,IAAMyG,EAHG,gBAIhB,IAASwB,EAAIjI,EAAGiI,EAAI,IAAMjI,EAAGiI,IACzBD,EAAgBzH,KAAK+G,EAAIW,GAAG,IALhB,kCAEQjI,IAFR,+CAUjBgI,GAViB,4CA7NhC,wDA0OUE,eAAiB,SAACzB,EAAMW,GAC1B,IAAK,IAAIpH,EAAI,EAAGA,EAAIqB,QAAQtB,OAAQC,IAChC,GAAIqB,QAAQrB,GAAG,IAAMyG,EACjB,IAAK,IAAIwB,EAAIjI,EAAGiI,EAAI,IAAMjI,EAAGiI,IACzB,GAAI5G,QAAQ4G,GAAG,IAAMb,EACjB,OAAO/F,QAAQ4G,GAAG,IAOhCE,gBAAkB,WACpB,IAAMC,EAAWzC,wBAAwByC,SACnCC,EAAc1C,wBAAwB0C,YACtCC,EAAiB,UAAMF,EAAN,YAAkBC,GACnCE,EAAmBjH,cAAckH,YAAYF,GACnDtG,cAAczB,KAAKgI,IAGjBE,iBAAmB,WACrB,OAAIzG,cAAcjC,OAAS,EACCiC,cAAc8D,QAAO,SAAC/E,EAAG2H,GAAJ,OAAU3H,EAAI2H,KAAK1G,cAAcjC,OAGvE,GAKT4C,QAAU,WACRgD,wBAAuB,WAAiBV,2BACxCU,wBAAuB,SAAeA,wBAAuB,SAAeR,oBAE5EQ,wBAAuB,cAAoBV,2BAC3CU,wBAAuB,YAAkBA,wBAAuB,YAAkBR,qBAIpFnC,UAAY,WACV2C,wBAAuB,SAAeT,2BACtCS,wBAAuB,SAAeA,wBAAuB,SAAeR,oBAE5EQ,wBAAuB,YAAkBT,2BACzCS,wBAAuB,YAAkBA,wBAAuB,YAAkBR,qBAtR9F,kBA4RUrE,UA5RV,iCA6RsB4G,iBAAiBrG,SA7RvC,QA6RIU,UA7RJ,eA8RU4D,wBAA0BF,4BAA4BhD,mBA9RhE,aAkSWZ,eAAiBE,UAAUA,UAAUhC,OAAS,IAlSzD,gCAsSQoC,SAAW,EAEXC,eAAgB,EAxSxB,kBA6SuCiF,iBAAiBtF,UAAWF,gBA7SnE,eA6Sc8G,iBA7Sd,iCAgTmCZ,oBAAoB1G,QAASsH,kBAhThE,eAgTcC,aAhTd,iCAkTqCvB,iBAAiBuB,aAAcjH,YAlTpE,QAkTckH,eAlTd,eAoTQjH,QAA6D,GAAnDsG,eAAeS,iBAAkBE,gBAE3CnH,WAAaoF,oBAAoBnF,WAAYC,QAAS0D,WAGnC,IAAfxD,YAAwBJ,YAAc0D,wBACtCtD,YAAa,EACPoE,OAASW,gBAAgBnF,YACzBoH,aAAe5C,OAASW,gBAAgBxB,uBACxC0D,sBAAwBD,aAAevH,gDAAMyH,mBAC7CC,qBAAuBF,sBAAwBlC,gBAAgBxB,uBACrE3D,WAAauF,0BAA0BgC,sBACvC9G,SAAWZ,gDAAMkF,KACjBrE,eAAgB,IAGD,IAAfN,YAAuBJ,YAAc2D,wBACrCvD,YAAa,GAIbJ,YAAc2D,wBAAwC,IAAfvD,YACjCoE,QAASW,gBAAgBnF,YACzBoH,cAAe5C,QAASW,gBAAgBxB,uBACxC0D,uBAAwB9C,aAAa6C,eACrCG,sBAAuBF,uBAAwBlC,gBAAgBxB,uBACrE1D,WAAasF,0BAA0BgC,uBACvC7G,eAAgB,IAEhBkD,SAAW,IACX3D,WAAaD,WACbU,eAAgB,EAChBuC,UAAY,GAIhB9C,eAAiBA,eAAiByD,SAAWnD,SAGzCC,cACA6B,QAA2C,KAAvBqB,SAAWnD,UAE/BkC,SAAgC,IAAXiB,SAEzBd,kBAAoBP,OAASI,QAGzBmB,eACAD,gBAAkC,EAClCC,cAAe,EAGfrB,SAAS+E,QAAQjF,QACjBE,SAASrB,MACTyB,UAAU2E,QAAQ7E,SAClBE,UAAUzB,MACV4B,cAAcwE,QAAQ1E,mBACtBE,cAAc5B,MACd+B,YAAYqE,QAAQvE,WACpBE,YAAY/B,MACZkC,MAAMkE,QAAQpE,mBACdE,MAAMlC,MACNQ,QAAQC,IAAI,SAAUY,UACtBb,QAAQC,IAAI,UAAWgB,WACvBjB,QAAQC,IAAI,sBAAuBmB,eACnCpB,QAAQC,IAAI,YAAasB,aACzBvB,QAAQC,IAAI,gBAAiByB,OAC7B1B,QAAQC,IAAI,YAAaoC,wBAAuB,UAChDrC,QAAQC,IAAI,eAAgBoC,wBAAuB,aAG/C9E,QACAqD,UAAY0B,QAAQzB,SAASgF,MAAM,EAAGzI,gBACtC4D,WAAasB,QAAQrB,UAAU4E,MAAM,EAAGzI,gBACxC+D,qBAAuBmB,QAAQlB,cAAcyE,MAAM,EAAGzI,gBACtDkE,aAAegB,QAAQf,YAAYsE,MAAM,EAAGzI,gBAC5CqE,qBAAuBa,QAAQZ,MAAMmE,MAAM,EAAGzI,iBAIlDyH,kBAC+C,IAA3CxC,wBAAuB,aAAiE,IAAxCA,wBAAuB,SACvE1D,eAAe1B,KAAK,CAAE6I,SAAUpH,cAAcA,cAAcjC,OAAS,GAAIsJ,KAAMxH,iBAC9B,GAA1C8D,wBAAuB,aAA+D,GAAvCA,wBAAuB,UAC7EzD,gBAAgB3B,KAAK,CAAE6I,SAAUpH,cAAcA,cAAcjC,OAAS,GAAIsJ,KAAMxH,iBAK9EyH,eAAiBC,8CAAS7G,UAC5B,CACIyB,SAAUA,SAASjB,QACnBgB,UAAWA,UACXK,UAAWA,UAAUrB,QACrBoB,WAAYA,WACZI,cAAeA,cAAcxB,QAC7BuB,qBAAsBA,qBACtBI,YAAaA,YAAY3B,QACzB0B,aAAcA,aACdI,MAAOA,MAAM9B,QACb6B,qBAAsBA,uBAIxByE,eAAiBD,8CAAS1G,UAC5B,CACIsB,SAAUA,SAAShB,QACnBe,UAAWA,UACXK,UAAWA,UAAUpB,QACrBmB,WAAYA,WACZI,cAAeA,cAAcvB,QAC7BsB,qBAAsBA,qBACtBI,YAAaA,YAAY1B,QACzByB,aAAcA,aACdI,MAAOA,MAAM7B,QACb4B,qBAAsBA,uBAIxB0E,iBAAmBF,8CAASxG,UAC9B,CACIoB,SAAUA,SAASf,QACnBc,UAAWA,UACXK,UAAWA,UAAUnB,QACrBkB,WAAYA,WACZI,cAAeA,cAActB,QAC7BqB,qBAAsBA,qBACtBI,YAAaA,YAAYzB,QACzBwB,aAAcA,aACdI,MAAOA,MAAM5B,QACb2B,qBAAsBA,uBAIxB2E,iBAAmBH,8CAAStG,UAC9B,CACIkB,SAAUA,SAASd,QACnBa,UAAWA,UACXK,UAAWA,UAAUlB,QACrBiB,WAAYA,WACZI,cAAeA,cAAcrB,QAC7BoB,qBAAsBA,qBACtBI,YAAaA,YAAYxB,QACzBuB,aAAcA,aACdI,MAAOA,MAAM3B,QACb0B,qBAAsBA,uBAI9BzB,QAAQC,IAAI+F,eAAiBE,gBAC7BlG,QAAQC,IAAIkG,iBAAmBC,kBAC3B7I,QACIyI,eAAiBE,eACjB7G,UAEK8G,iBAAmBC,kBACxB1G,aAkDRiB,OAAS,EACTI,QAAU,EACVG,kBAAoB,EACpBG,UAAY,EACZG,kBAAoB,EACpBvC,kBAAoB,EACpBC,2BAA6B,EAC7BH,YAAcf,cAAcgB,MAAMC,mBAClCe,QAAQC,IAAI,kBAAmBgC,iBA1gB3C,uCAihBUoE,WAAalB,mBACbmB,gBAAkBD,WAAWE,QAAQ,GAC3CvG,QAAQC,IAAI,0CAA2CqG,iBAnhB3D,0BAuhBY,CACJrE,eAAgBA,eAChBoE,WAAYC,gBACZ3H,eAAgBA,eAChBC,gBAAiBA,kBA3hBzB,4D,4BAgiBezB,4B,mQCliBf,uBAQmBK,EARnB,uBAAAC,EAAA,iGAAAA,EAAA,MAQI,8BAAAA,EAAA,sEAC2BC,MAAMC,KADjC,cACUC,EADV,gBAEwBA,EAASC,OAFjC,OAEUC,EAFV,OAGIC,EAAU1B,YAAUyB,GAHxB,4CARJ,uBAQmBN,EARnB,2CAIQ2F,EAAO,GACPqD,EAAM,GASJC,EAAoB,SAACC,GACvB,IAAIhK,EAAI,EACJiK,EAAY,GACZ7C,EAAU,GACVxF,EAAU,GACdoI,EAAME,SAAQ,SAACC,EAAMC,EAAOhK,GACxB6J,EAAU1J,KAAK4J,EAAK,IACpB/C,EAAQ7G,KAAK4J,EAAK,IAClBvI,EAAQrB,KAAK4J,EAAK,IAER,OADVnK,GAAQ,KAEJyG,EAAKlG,KAAK2G,KAAKmD,IAAIC,MAAMpD,KAAM+C,IAC/BH,EAAIvJ,KAAK2G,KAAKmD,IAAIC,MAAMpD,KAAMqD,EAAWC,EAASpD,EAASxF,MAC3DwF,EAAU,GACVxF,EAAU,GACV5B,EAAI,OAKVwK,EAAW,SAACC,EAAQC,GACtB,IAAMF,EAAWC,EAAOE,KAAI,SAAUC,EAAG5K,GACrC,MAAO,CAAC4K,EAAGF,EAAO1K,OAEtB,OAAOwK,GAGLD,EAAa,SAACnK,GAChB,IAAMmK,EAAanK,EAAMuK,KAAI,SAACR,GAC1B,MAAO,CAAEA,EAAK,GAAKA,EAAK,OAE5B,OAAOI,GAGLM,EAAa,SAACb,GAChB,IAAMpK,EAAO,GAIb,OAHAoK,EAAME,SAAQ,SAACC,EAAMC,EAAOhK,GACxBR,EAAKW,KAAK,CAAE8I,KAAMc,EAAK,GAAIW,MAAe,IAARX,EAAK,QAEpCvK,GArDf,UAyDUkB,IAzDV,eA0DIiJ,EAAkB1I,GACZzB,EAAO4K,EAAS/D,EAAMqD,GACtBiB,EAAgBF,EAAWjL,GA5DrC,kBA6DWmL,GA7DX,6C,sBAiEetK,I,QAAAA,E,2IChEMuK,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTtL,KAAM,IAEV,EAAKqC,eAAiBgJ,EAAME,MAC5B,EAAKjJ,gBAAkB+I,EAAMG,MANd,E,qDASnB,WAAqB,IAAD,OAChBC,IAAcC,MAAK,SAACpK,GAAe,EAAKqK,SAAS,CAAE3L,KAAMsB,IAAaoC,QAAQC,IAAIrC,MAClFoC,QAAQC,IAAIiI,KAAKvJ,gBACjBqB,QAAQC,IAAKiI,KAAKtJ,mB,oBAGtB,WACI,OACI,cAACuJ,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,OAAzC,SACI,eAACC,EAAA,EAAD,CACIF,MAAO,IACPC,OAAQ,IACRE,OAAQ,CACJC,IAAK,EACLC,MAAO,EACPC,KAAM,EACNC,OAAQ,IAPhB,UAUI,+BACI,iCAAgBC,GAAG,UAAUC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAArD,UACI,sBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,KACnD,sBAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,UAG5D,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAAOC,QAAQ,OAAOC,KAAK,SAASC,OAAQ,CAAC,UAAW,WAAYC,MAAO,CAAC,GAAI,GAAI,GAAI,IAAxF,SACI,cAACC,EAAA,EAAD,CAAO3M,MAAM,OAAOiM,QAAS,EAAGW,SAAS,mBAE7C,cAACC,EAAA,EAAD,UACI,cAACF,EAAA,EAAD,CAAO3M,MAAM,aAAaiM,OAAQ,EAAGW,SAAS,SAASE,OAAQ,OAEnE,cAACD,EAAA,EAAD,CAAOE,QAAQ,QAAQC,YAAY,QAAQP,OAAQ,CAAC,EAAG,KAAvD,SACI,cAACE,EAAA,EAAD,CAAO3M,MAAM,eAAeiM,OAAQ,EAAGW,SAAS,SAASE,OAAQ,OAErE,cAACG,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,cAAc,MAAM9B,OAAQ,KACpC,cAAC+B,EAAA,EAAD,CAAM9N,KAAM4L,KAAKN,MAAMtL,KAAMkN,KAAK,WAAWD,QAAQ,QAAQc,OAAO,UAAUC,YAAa,EAAGxJ,KAAK,gBAAgByJ,UAAW,CAAEC,EAAG,KACnI,cAACC,EAAA,EAAD,CAAMV,QAAQ,QAAQzN,KAAM4L,KAAKvJ,eAAgB6K,KAAK,WAAWD,QAAQ,iBAAiBc,OAAO,UAAUK,YAAa,EAAGH,UAAW,CAAEC,EAAG,KAC3I,cAACC,EAAA,EAAD,CAAMV,QAAQ,QAAQzN,KAAM4L,KAAKtJ,gBAAiB4K,KAAK,WAAWD,QAAQ,kBAAkBc,OAAO,UAAUK,YAAa,EAAGH,UAAW,CAAEC,EAAG,c,GAlD5HG,iB,GCJtB,I,6JC8TAC,MA5Sf,WAEE,IAAIC,EAAW,GACTC,EAAW7M,EAHJ,EAIuC8M,mBAASD,EAAS5M,mBAAmB,IAJ5E,mBAINA,EAJM,aAKa6M,mBAAS7M,EAAmBc,QALzC,mBAKNA,EALM,aAMa+L,mBAAS7M,EAAmBiB,oBANzC,gCAOqB4L,mBAAS,KAP9B,mBAONC,EAPM,KAOKC,EAPL,OAS+BF,mBAAS,GATxC,mBASN9I,EATM,KASUiJ,EATV,OAUmBH,mBAAS,GAV5B,mBAUNI,EAVM,KAUIC,EAVJ,OAW+BL,mBAAS,IAXxC,mBAWNpM,EAXM,KAWU0M,EAXV,OAYiCN,mBAAS,IAZ1C,oBAYNnM,GAZM,MAYW0M,GAZX,SAciCP,mBAAS,IAd1C,qBAcNQ,GAdM,MAcWC,GAdX,SAeiCT,mBAAS,IAf1C,qBAeNU,GAfM,MAeWC,GAfX,SAgB+BX,mBAASY,OAAOC,IAAP,IAAD,2NAhBvC,qBAgBNC,GAhBM,MAgBUC,GAhBV,SAiB+Bf,mBAASY,OAAOC,IAAP,IAAD,2NAjBvC,qBAiBNG,GAjBM,MAiBUC,GAjBV,SAmBqBjB,oBAAS,GAnB9B,qBAmBNkB,GAnBM,MAmBKC,GAnBL,SAoByBnB,oBAAS,GApBlC,qBAoBNoB,GApBM,MAoBOC,GApBP,SAqB6BrB,mBAAS,GArBtC,qBAqBN3N,GArBM,MAqBSiP,GArBT,SAsBmBtB,mBAAS,GAtB5B,qBAsBN1N,GAtBM,MAsBIiP,GAtBJ,MAuBT/O,IAAQ,EAEZgP,qBAAU,WACRC,KACAvB,EAAaJ,KACZ,IAGH,IAAM2B,GAAW,uCAAG,8BAAA/O,EAAA,sDACdgP,EAAI,IACJC,EAAI,GACR1N,EAAMqI,KAAI,SAACR,EAAMC,EAAOhK,GACR,IAAVgK,EACF+D,EAAS5N,KAAK,CACZ2L,GAAI9B,EAAQ,EAEZxK,KAAM,CAAEqQ,MAAO9F,EAAKxD,UACpBuG,SAAU,CAAE6C,EAAGA,EAAI,IAAKC,EAAGA,GAC3BE,eAAgB,QAChBC,eAAgB,SAChBC,MAAO,CAAEC,gBAAiB,UAAWC,aAAc,GAAIC,QAAS,GAAIC,SAAU,EAAGC,WAAY,SAC5F,CACDvE,GAAI,QAAU9B,EAAQ,EACtB0C,KAAM,UACN4D,OAAQtG,EAAQ,EAChBuG,OAAQvG,EAAQ,EAChBwG,cAAe,cACfC,UAAU,EACVT,MAAO,CAAEzC,OAAQ,UAAWK,YAAa,KAElC5D,EAAQ,IAAM9H,EAAMvC,QACnB,MAANgQ,EAAWA,EAAI,IACJ,MAANA,IAAWA,EAAI,KACxBC,GAAQ,IACR7B,EAAS5N,KAAK,CACZ2L,GAAI9B,EAAQ,EAEZxK,KAAM,CAAEqQ,MAAO9F,EAAKxD,UACpBuG,SAAU,CAAE6C,EAAGA,EAAGC,EAAGA,GACrBE,eAAgB,QAChBC,eAAgB,MAChBC,MAAO,CAAEC,gBAAiB,UAAWC,aAAc,GAAIC,QAAS,GAAIC,SAAU,EAAGC,WAAY,SAC5F,CACDvE,GAAI,QAAU9B,EAAQ,EACtB0C,KAAM,UACN4D,OAAQtG,EAAQ,EAChBuG,OAAQ,EACRC,cAAe,cACfC,UAAU,EACVT,MAAO,CAAEzC,OAAQ,UAAWK,YAAa,OAGjC,MAAN+B,EAAWA,EAAI,IACJ,MAANA,IAAWA,EAAI,KACxBC,GAAQ,IACR7B,EAAS5N,KAAK,CACZ2L,GAAI9B,EAAQ,EACZxK,KAAM,CAAEqQ,MAAO9F,EAAKxD,UACpBuG,SAAU,CAAE6C,EAAGA,EAAGC,EAAGA,GACrBE,eAAgB,QAChBC,eAAgB,MAChBC,MAAO,CAAEC,gBAAiB,UAAWC,aAAc,GAAIC,QAAS,GAAIC,SAAU,EAAGC,WAAY,SAC5F,CACDvE,GAAI,QAAU9B,EAAQ,EACtB0C,KAAM,UACN4D,OAAQtG,EAAQ,EAChBuG,OAAQvG,EAAQ,EAChBwG,cAAe,cACfC,UAAU,EACVT,MAAO,CAAEzC,OAAQ,UAAWK,YAAa,SA7D7B,2CAAH,qDAkFX8C,GAAeC,YAAW,CAC9BC,KAAM,CACJC,MAAO,UACPtF,OAAQ,GAEVuF,MAAO,CACLvF,OAAQ,GACRD,MAAO,GACP2E,gBAAiB,OACjBc,OAAQ,yBACRC,WAAY,GACZC,YAAa,GACb,6BAA8B,CAC5BC,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVxF,KAAM,oBAERyF,MAAO,CACL9F,OAAQ,EACR2E,aAAc,GAEhBoB,KAAM,CACJ/F,OAAQ,EACR2E,aAAc,EACdD,gBAAiB,UACjBiB,UA1CiB,6BAcAP,CA8BlBY,KA8CH,OACE,mCAEE,sBAAKvB,MAAOX,GAAc,CAAEmC,cAAe,OAAQC,QAAS,OAAU,GAAtE,UAGE,qBAAKzB,MAAO,CAAE0B,KAAM,EAAG5E,SAAU,WAAYxB,MAAO,MAAOC,OAAQ,MAAOK,KAAM,EAAGF,IAAK,EAAGuE,gBAAiB,UAAWiB,UAAW,kCAAlI,SACE,eAAC,IAAD,CAAWnD,SAAUG,EAAWyD,eAAgB,UAAhD,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CACEC,QAAQ,OACRC,IAAK,GACLC,KAAM,SAMZ,qBAAK9B,MAAO,CAAE0B,KAAM,EAAG5E,SAAU,WAAYxB,MAAO,MAAOC,OAAQ,MAAOI,MAAO,EAAGD,IAAK,GAAzF,SACE,sBAAKsE,MAAO,CAAE0B,KAAM,EAAGvB,QAAS,GAAI5E,OAAQ,OAA5C,UACE,sBAAKyE,MAAO,CAAE0B,KAAM,EAAGK,cAAe,MAAOf,UAAW,IAAxD,UACE,qBAAKhB,MAAO,CAAEgC,WAAY,wBAAyB5B,SAAU,GAAIC,WAAY,MAAO4B,UAAW,UAA/F,2BACA,cAACC,EAAA,EAAD,CAAYlC,MAAO,CAAEiB,WAAY,MAAOvF,KAAM,IAAMyG,QAAS,kBAAM/C,IAAcD,KAAjF,SACE,cAAC,IAAD,CAAQ2C,KAAM,GAAIjB,MAAM,iBAG5B,qBAAKb,MAAO,CAAEoC,eAAgB,SAAUC,WAAY,SAAUJ,UAAW,SAAU7B,SAAU,GAAI4B,WAAY,uBAAwBM,eAAgB,YAAaC,aAAc,MAAhL,kCAGA,cAAC7B,GAAD,CAAc8B,kBAAkB,OAAOC,aAAW,gBAAgBvS,MAAOI,GAAe2J,IAAK,EAAGyI,SAAU,SAACC,EAAOzS,GAAYqP,GAAiBrP,IAAU0S,kBAAmB,SAACD,EAAOzS,GAAYqP,GAAiBrP,MACjN,qBAAK8P,MAAO,CAAE0B,KAAM,EAAGM,WAAY,oBAAqB5B,SAAU,GAAI6B,UAAW,SAAUM,aAAc,IAAzG,gCACA,cAAC7B,GAAD,CAAc8B,kBAAkB,OAAOC,aAAW,gBAAgBvS,MAAOK,GAAU0J,IAAK,EAAGyI,SAAU,SAACC,EAAOzS,GAAYsP,GAAYtP,IAAU0S,kBAAmB,SAACD,EAAOzS,GAAYsP,GAAYtP,MAClM,qBAAK8P,MAAO,CAAE0B,KAAM,EAAGM,WAAY,oBAAqB5B,SAAU,GAAI6B,UAAW,SAAUM,aAAc,IAAzG,kCACA,qBAAKvC,MAAO,CAAEoC,eAAgB,SAAUC,WAAY,SAAUJ,UAAW,SAAU7B,SAAU,GAAI4B,WAAY,uBAAwBM,eAAgB,YAAaC,aAAc,KAAMvB,UAAW,MAAjM,8CAGA,sBAAKhB,MAAO,CAAEgB,UAAW,KAAM6B,YAAa,EAAGC,YAAa,OAAQC,YAAa,QAAS7C,aAAc,GAAxG,UACE,qBAAKF,MAAO,CAAEgC,WAAY,oBAAqB5B,SAAU,GAAI6B,UAAW,SAAU5B,WAAY,OAAQW,UAAW,MAAjH,sBACA,cAAC,YAAD,UAAYjC,KACZ,qBAAKiB,MAAO,CAAEgD,QAAS,UAAvB,SACE,cAACC,EAAA,EAAD,CAAWpD,MAAM,WAAW+B,QAAQ,SAAS5B,MAAO,CAAE1E,MAAO,QAAUoH,SAAU,SAACC,GAAD,OAnFzE,SAACA,GACrBzP,QAAQC,IAAIwP,EAAMpC,OAAOrQ,OACzBwO,GAAmBiE,EAAMpC,OAAOrQ,OAiFwEgT,CAAcP,IAAQQ,WAAY,SAACC,GAAwB,UAAXA,EAAGC,KApEvI,WACpB,IAAMC,EAASC,YAAM9E,IAAiB+E,QACtCxE,GAAkBH,OAAOC,IAAP,IAAD,0DAA2BwE,IAkEgIG,WAGpK,sBAAKzD,MAAO,CAAEgB,UAAW,KAAM6B,YAAa,EAAGC,YAAa,OAAQC,YAAa,QAAS7C,aAAc,GAAxG,UACE,qBAAKF,MAAO,CAAEgC,WAAY,oBAAqB5B,SAAU,GAAI6B,UAAW,SAAU5B,WAAY,OAAQW,UAAW,MAAjH,wBACA,cAAC,YAAD,UAAY/B,KACZ,qBAAKe,MAAO,CAAEgD,QAAS,UAAvB,SACE,cAACC,EAAA,EAAD,CAAWpD,MAAM,aAAa+B,QAAQ,SAAS5B,MAAO,CAAE1E,MAAO,QAAUoH,SAAU,SAACC,GAAD,OAlFzE,SAACA,GACvBzP,QAAQC,IAAIwP,EAAMpC,OAAOrQ,OACzB0O,GAAmB+D,EAAMpC,OAAOrQ,OAgF0EwT,CAAgBf,IAAQQ,WAAY,SAACC,GAAwB,UAAXA,EAAGC,KAtEzI,WACtB,IAAMC,EAASC,YAAM5E,IAAiB6E,QACtCtE,GAAkBL,OAAOC,IAAP,IAAD,0DAA2BwE,IAoEoIK,WAGxK,qBAAK3D,MAAO,CAAEoC,eAAgB,SAAUC,WAAY,SAAUJ,UAAW,SAAU7B,SAAU,GAAI4B,WAAY,uBAAwBM,eAAgB,YAAaC,aAAc,KAAMvB,UAAW,MAAjM,8CAGA,sBAAKhB,MAAO,CAAE+B,cAAe,MAAOd,WAAY,OAAhD,UACE,cAAC2C,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQhC,KAAM,SAAUjB,MAAM,UAAU6B,SAAU,kBAAMjS,IAASA,MAC1EoP,MAAM,UAER,cAACkE,EAAA,EAAD,CAAQjC,KAAK,QAAQF,QAAQ,YAAYf,MAAM,UAAUsB,QAAS,kBA3ExD,WACpB,IAAM3R,EAAW,CAAE+B,QAASkM,GAAiB7L,UAAW+L,IACxDS,IAAa,GACbE,IAAe,GACfpM,QAAQC,IAAI7C,IACZ4C,QAAQC,IAAI5C,IACZ2C,QAAQC,IAAI1C,IACZuT,YAAiB1T,GAAeC,GAAUC,EAAUC,IAAOyK,MAAK,SAACpK,GAC/DoC,QAAQC,IAAIrC,GACZsN,EAAkBtN,EAASqE,gBAC3BmJ,EAAYxN,EAASyI,YACrBgF,EAAkBzN,EAASe,gBAC3B2M,GAAmB1N,EAASgB,iBAC5BwN,IAAe,MA8DiE2E,IAAxE,6BAQN,qBAAKjE,MAAO,CAAE0B,KAAM,EAAG5E,SAAU,WAAYxB,MAAO,MAAOC,OAAQ,MAAOI,MAAO,EAAGE,OAAQ,GAA5F,SACE,sBAAKmE,MAAO,CAAE0B,KAAM,EAAGvB,QAAS,IAAhC,UACE,qBAAKH,MAAO,CAAE0B,KAAM,EAAGM,WAAY,wBAAyB5B,SAAU,GAAI6B,UAAW,UAArF,wBACA,sBAAKjC,MAAO,CAAE+B,cAAe,MAAOf,UAAW,IAA/C,UACE,qBAAKhB,MAAO,CAAEgC,WAAY,oBAAqB5B,SAAU,GAAI4C,QAAS,UAAtE,8BACA,qBAAKhD,MAAO,CAAEgC,WAAY,oBAAqB5B,SAAU,GAAI4C,QAAS,SAAU/B,WAAY,OAA5F,SAAsG9L,OAExG,sBAAK6K,MAAO,CAAE+B,cAAe,MAAOf,UAAW,IAA/C,UACE,qBAAKhB,MAAO,CAAEgC,WAAY,oBAAqB5B,SAAU,GAAI4C,QAAS,UAAtE,uBACA,sBAAKhD,MAAO,CAAEgC,WAAY,oBAAqB5B,SAAU,GAAI4C,QAAS,SAAU/B,WAAY,OAA5F,UAAsG5C,EAAtG,eAMN,qBAAK2B,MAAO,CAAE0B,KAAM,EAAG5E,SAAU,WAAYxB,MAAO,MAAOC,OAAQ,MAAOK,KAAM,EAAGC,OAAQ,GAA3F,SACE,cAAC,EAAD,CAAOd,MAAOlJ,EAAgBmJ,MAAOlJ,OAIvC,eAACoS,EAAA,EAAD,CAAQC,KAAMhF,GAAWiF,QAAS,kBAAMhF,IAAa,IAAQiF,kBAAgB,oBAA7E,UACE,cAACC,EAAA,EAAD,CAAaxI,GAAG,oBAAhB,sBACA,cAACyI,EAAA,EAAD,UACE,cAACR,EAAA,EAAD,CAAQ5B,QAAS,kBAAM/C,IAAa,IAAQyB,MAAM,UAAlD,+B,OCnSZ2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.bf7cc985.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/test.b7d6ebc6.csv\";","function csv2array(data, delimeter) {\n    // Retrieve the delimeter\n    if (delimeter == undefined) \n      delimeter = ',';\n    if (delimeter && delimeter.length > 1)\n      delimeter = ',';\n  \n    // initialize variables\n    var newline = '\\n';\n    var eof = '';\n    var i = 0;\n    var c = data.charAt(i);\n    var row = 0;\n    var col = 0;\n    var array = new Array();\n  \n    while (c != eof) {\n      // skip whitespaces\n      while (c == ' ' || c == '\\t' || c == '\\r') {\n        c = data.charAt(++i); // read next char\n      }\n      \n      // get value\n      var value = \"\";\n      if (c == '\\\"') {\n        // value enclosed by double-quotes\n        c = data.charAt(++i);\n        \n        do {\n          if (c != '\\\"') {\n            // read a regular character and go to the next character\n            value += c;\n            c = data.charAt(++i);\n          }\n          \n          if (c == '\\\"') {\n            // check for escaped double-quote\n            var cnext = data.charAt(i+1);\n            if (cnext == '\\\"') {\n              // this is an escaped double-quote. \n              // Add a double-quote to the value, and move two characters ahead.\n              value += '\\\"';\n              i += 2;\n              c = data.charAt(i);\n            }\n          }\n        }\n        while (c != eof && c != '\\\"');\n        \n        if (c == eof) {\n          throw \"Unexpected end of data, double-quote expected\";\n        }\n  \n        c = data.charAt(++i);\n      }\n      else {\n        // value without quotes\n        while (c != eof && c != delimeter && c!= newline && c != ' ' && c != '\\t' && c != '\\r') {\n          value += c;\n          c = data.charAt(++i);\n        }\n      }\n  \n      // add the value to the array\n      if (array.length <= row) \n        array.push(new Array());\n      array[row].push(value);\n      \n      // skip whitespaces\n      while (c == ' ' || c == '\\t' || c == '\\r') {\n        c = data.charAt(++i);\n      }\n  \n      // go to the next row or column\n      if (c == delimeter) {\n        // to the next column\n        col++;\n      }\n      else if (c == newline) {\n        // to the next row\n        col = 0;\n        row++;\n      }\n      else if (c != eof) {\n        // unexpected character\n        throw \"Delimiter expected after character \" + i;\n      }\n      \n      // go to the next character\n      c = data.charAt(++i);\n    }  \n    \n    return array;\n  }\n\n  export default csv2array ","import File from '../misc/test.csv';\nimport MNIST from '../config/mnist.json';\nimport csv2array from './CSVToArray';\nimport { evaluate } from 'mathjs'\n\nasync function Main(histArraySize, stepSize, equation, adapt) {\n\n    // Configuration\n    const configuration = MNIST.adaptationStrategy[0];\n\n    // Initial Values\n    const capacitance = 200e-6; //micro-farads\n    let newVoltage = 0; //volts\n    let oldVoltage = 0 //volts\n    let current = 0; //amperes\n    let simulationTime = 0; //seconds\n    let hasBeenMax = false;\n    let rawData;\n\n    // Useful Utility Arrays\n    let timeArray = [];\n    let accuracyArray = [];\n    let onTimeAccuracy = [];\n    let offTimeAccuracy = [];\n\n    // Task Management Logic\n    let bootTime = 0;\n    let executedTasks = false;\n    let currentTask = configuration.tasks[0];\n    let currentTaskNumber = 0;\n    let currentTaskIterationNumber = 0;\n    let adaptiveVariables = configuration.adaptiveVariables;\n\n    // Adaptation Equations\n    let equation1 = equation.adaptUp.split('>')[0];\n    let equation2 = equation.adaptUp.split('>').pop();\n    let equation3 = equation.adaptDown.split('<')[0];\n    let equation4 = equation.adaptDown.split('<').pop();\n\n    // Adaptation Index\n    let index1 = 0;\n    let index2 = 0;\n    let index3 = 0;\n    let index4 = 0;\n    console.log(\"includes\", equation1.includes(\"[\"))\n    if (equation1.includes(\"[\")) {\n        const one = equation1.split('[').pop().split(']')[0];\n        equation1 = equation1.substr(0, equation1.lastIndexOf(\"[\"));\n        if (one.match(/[a-zA-Z]/)) {\n            index1 = 0\n        } else {\n            index1 = parseInt(one);\n        }\n    } if (equation2.includes(\"[\")) {\n        const two = equation2.split('[').pop().split(']')[0];\n        equation2 = equation2.substr(0, equation2.lastIndexOf(\"[\"));\n        if (two.match(/[a-zA-Z]/)) {\n            index2 = 0\n        } else {\n            index2 = parseInt(two);\n        }\n    } if (equation3.includes(\"[\")) {\n        const three = equation3.split('[').pop().split(']')[0];\n        equation3 = equation3.substr(0, equation3.lastIndexOf(\"[\"));\n        if (three.match(/[a-zA-Z]/)) {\n            index3 = 0\n        } else {\n            index3 = parseInt(three);\n        }\n    } if (equation4.includes(\"[\")) {\n        const four = equation4.split('[').pop().split(']')[0];\n        equation4 = equation4.substr(0, equation4.lastIndexOf(\"[\"));\n        if (four.match(/[a-zA-Z]/)) {\n            index4 = 0\n        } else {\n            index4 = parseInt(four);\n        }\n    }\n\n    // Adaptation Signals\n    let onTime = 0;\n    let avgOnTime = 0;\n    let s_onTime = new Array(histArraySize + 1).fill(0);\n\n    let offTime = 0;\n    let avgOffTime = 0;\n    let s_offTime = new Array(histArraySize + 1).fill(0);\n\n    let appCompletionTime = 0;\n    let avgAppCompletionTime = 0;\n    let s_appCompTime = new Array(histArraySize + 1).fill(0);\n\n    let taskCount = 0;\n    let avgTaskCount = 0;\n    let s_taskCount = new Array(histArraySize + 1).fill(0);\n\n    let powerFailureCount = 0;\n    let avgpowerFailureCount = 0;\n    let s_pFC = new Array(histArraySize + 1).fill(0);\n\n    let lowerAdaptationThreshold = 0;\n    let upperAdaptationThreshold = 7;\n    let adaptationStepSize = stepSize;\n\n    // Threshold Logic\n    let upperThresholdVoltage = 2.9 //volts\n    let lowerThresholdVoltage = 1.9 //volts\n\n    // Step Logic\n    let stepTime = 0.01; //seconds\n\n    // Global Runs Logic\n    let appCompletions = 0;\n    let appCompleted = false;\n\n    // Functions Library\n\n    async function getData() {\n        const response = await fetch(File);\n        const table = await response.text();\n        rawData = csv2array(table);\n    }\n\n    const initializeAdaptiveVariables = (variables) => {\n        let adaptiveVariablesValues = {}\n        for (var i = 0; i < variables.length; i++) {\n            adaptiveVariablesValues[variables[i]] = 0;\n        }\n        return adaptiveVariablesValues;\n    }\n\n    const average = list => list.reduce((prev, curr) => prev + curr) / list.length;\n\n    const executeTasks = (energy) => {\n\n        let availableEnergy = energy;\n        if (typeof currentTask.taskIterations !== 'number') {\n            let taskIterations;\n            for (var i = 0; i < currentTask.adaptiveVars.length; i++) {\n                window[currentTask.adaptiveVars[i]] = adaptiveVariablesValues[currentTask.adaptiveVars[i]];\n            }\n            taskIterations = eval(currentTask.taskIterations);\n            if (energy > currentTask.energyPerItr) {\n                stepTime = currentTask.time;\n                availableEnergy = energy - currentTask.energyPerItr;\n                taskCount = taskCount + currentTask.taskWeight;\n                currentTaskIterationNumber = currentTaskIterationNumber + 1;\n                if (taskIterations == currentTaskIterationNumber) {\n                    console.log(currentTask.taskName);\n                    console.log(\"task completion time\", simulationTime);\n                    if (currentTask.nextTask !== \"task_init\") {\n                        currentTaskIterationNumber = 0;\n                        currentTaskNumber = currentTaskNumber + 1;\n                        currentTask = configuration.tasks[currentTaskNumber];\n                    } else if (currentTask.nextTask === \"task_init\") {\n                        appCompleted = true;\n                    }\n                }\n                return availableEnergy;\n            } else {\n                stepTime = currentTask.time * (availableEnergy / currentTask.energyPerItr);\n                hasBeenMax = false;\n                powerFailureCount = powerFailureCount + 1;\n                availableEnergy = calculateEnergy(lowerThresholdVoltage);\n                return availableEnergy;\n            }\n        } else {\n            const taskIterations = currentTask.taskIterations;\n            if (energy > currentTask.energyPerItr) {\n                stepTime = currentTask.time;\n                availableEnergy = energy - currentTask.energyPerItr;\n                taskCount = taskCount + currentTask.taskWeight;\n                currentTaskIterationNumber = currentTaskIterationNumber + 1;\n                if (taskIterations === currentTaskIterationNumber) {\n                    console.log(currentTask.taskName);\n                    console.log(\"task completion time\", simulationTime);\n                    if (currentTask.nextTask !== \"task_init\") {\n                        currentTaskIterationNumber = 0;\n                        currentTaskNumber = currentTaskNumber + 1;\n                        currentTask = configuration.tasks[currentTaskNumber];\n                    } else if (currentTask.nextTask === \"task_init\") {\n                        appCompleted = true;\n                    }\n                }\n                return availableEnergy;\n            } else {\n                stepTime = currentTask.time * (availableEnergy / currentTask.energyPerItr)\n                hasBeenMax = false;\n                powerFailureCount = powerFailureCount + 1;\n                availableEnergy = calculateEnergy(lowerThresholdVoltage);\n                return availableEnergy;\n            }\n        }\n    }\n\n    const calculateNewVoltage = (v, c, t) => {\n        const newVoltage = ((1 / capacitance) * ((c) * (t))) + v;\n        return newVoltage\n    }\n\n    const calculateRemainingVoltage = (energy) => {\n        const voltage = Math.sqrt(2 * (1 / capacitance) * (energy));\n        return voltage\n    }\n\n    const calculateEnergy = (voltage) => {\n        const maxEnergy = (0.5) * (capacitance) * (voltage) * (voltage);\n        return maxEnergy\n    }\n\n    const findClosestValue = async (arr, val) => {\n        const closestValue = arr.reduce(function (prev, curr) {\n            return (Math.abs(curr - val) < Math.abs(prev - val) ? curr : prev);\n        });\n        return closestValue;\n    }\n\n    const extractTimeArray = async (arr) => {\n        let newTimeArray = []\n        let filteredArray = arr.filter((_, i) => i % 512 == 0);\n        for (var a = 0; a < filteredArray.length; a++) {\n            newTimeArray.push(filteredArray[a][0]);\n        }\n        return newTimeArray\n    }\n\n    const extractVoltageArray = async (arr, time) => {\n        let newVoltageArray = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i][0] == time) {\n                for (var j = i; j < 512 + i; j++) {\n                    newVoltageArray.push(arr[j][1]);\n                }\n                break;\n            }\n        }\n        return newVoltageArray\n    }\n\n    const findCurrentNow = (time, voltage) => {\n        for (var i = 0; i < rawData.length; i++) {\n            if (rawData[i][0] == time) {\n                for (var j = i; j < 512 + i; j++) {\n                    if (rawData[j][1] == voltage) {\n                        return rawData[j][2]\n                    }\n                }\n            }\n        }\n    }\n\n    const findAccuracyNow = () => {\n        const skipRows = adaptiveVariablesValues.skipRows;\n        const skipColumns = adaptiveVariablesValues.skipColumns;\n        const accuracyMapString = `${skipRows}_${skipColumns}`;\n        const accuracyMapValue = configuration.accuracyMap[accuracyMapString];\n        accuracyArray.push(accuracyMapValue);\n    }\n\n    const handleMLAccuracy = () => {\n        if (accuracyArray.length > 0) {\n            const averageAccuracy = accuracyArray.reduce((a, b) => a + b) / accuracyArray.length;\n            return averageAccuracy;\n        } else {\n            return 0;\n        }\n    }\n\n    // Adaptation\n    const adaptUp = () => {\n        if (adaptiveVariablesValues[\"skipRows\"] !== lowerAdaptationThreshold) {\n            adaptiveVariablesValues[\"skipRows\"] = adaptiveVariablesValues[\"skipRows\"] - adaptationStepSize;\n        }\n        if (adaptiveVariablesValues[\"skipColumns\"] !== lowerAdaptationThreshold) {\n            adaptiveVariablesValues[\"skipColumns\"] = adaptiveVariablesValues[\"skipColumns\"] - adaptationStepSize;\n        }\n    }\n\n    const adaptDown = () => {\n        if (adaptiveVariablesValues[\"skipRows\"] < upperAdaptationThreshold) {\n            adaptiveVariablesValues[\"skipRows\"] = adaptiveVariablesValues[\"skipRows\"] + adaptationStepSize;\n        }\n        if (adaptiveVariablesValues[\"skipColumns\"] < upperAdaptationThreshold) {\n            adaptiveVariablesValues[\"skipColumns\"] = adaptiveVariablesValues[\"skipColumns\"] + adaptationStepSize;\n        }\n    }\n\n    // Setup\n\n    await getData();\n    timeArray = await extractTimeArray(rawData);\n    const adaptiveVariablesValues = initializeAdaptiveVariables(adaptiveVariables);\n\n    // Main Script\n\n    while (simulationTime < timeArray[timeArray.length - 1]) {\n\n        // INSERT SOME LOGIC TO HANDLE TASKS HERE (POTENTIALLY)\n\n        bootTime = 0;\n\n        executedTasks = false;\n\n        // Call Charge Capacitor\n\n        // 1) Check which timestamp is closest to simulation time\n        const closestTimestamp = await findClosestValue(timeArray, simulationTime);\n        // console.log(\"closest Timestamp\", closestTimestamp)\n        // 1.5) Get array of voltages that corresponds to the given timestamp \n        const voltageArray = await extractVoltageArray(rawData, closestTimestamp);\n        // 2) Find which voltage closely coresponds to oldVoltage within this IV curve\n        const closestVoltage = await findClosestValue(voltageArray, oldVoltage);\n        // 3) Lookuptable based on those 2 values to find current\n        current = findCurrentNow(closestTimestamp, closestVoltage) * 15;\n        // 4) Calculate new voltage based on the current\n        newVoltage = calculateNewVoltage(oldVoltage, current, stepTime);\n\n        // Check If capacitor hits upper threshold\n        if (hasBeenMax === false && newVoltage >= upperThresholdVoltage) {\n            hasBeenMax = true;\n            const energy = calculateEnergy(newVoltage)\n            const usefulEnergy = energy - calculateEnergy(lowerThresholdVoltage);\n            const remainingUsefulEnergy = usefulEnergy - MNIST.initOverheadEnergy;\n            const totalRemainingEnergy = remainingUsefulEnergy + calculateEnergy(lowerThresholdVoltage);\n            newVoltage = calculateRemainingVoltage(totalRemainingEnergy)\n            bootTime = MNIST.time;\n            executedTasks = true;\n        }\n\n        if (hasBeenMax === true && newVoltage <= lowerThresholdVoltage) {\n            hasBeenMax = false;\n        }\n\n        // Execute if capacitor voltage is within upper and lower thresholds\n        if (newVoltage >= lowerThresholdVoltage && hasBeenMax === true) {\n            const energy = calculateEnergy(newVoltage);\n            const usefulEnergy = energy - calculateEnergy(lowerThresholdVoltage);\n            const remainingUsefulEnergy = executeTasks(usefulEnergy);\n            const totalRemainingEnergy = remainingUsefulEnergy + calculateEnergy(lowerThresholdVoltage);\n            oldVoltage = calculateRemainingVoltage(totalRemainingEnergy);\n            executedTasks = true;\n        } else {\n            stepTime = 0.01;\n            oldVoltage = newVoltage;\n            executedTasks = false;\n            taskCount = 0;\n        }\n\n        // Increments simulation time\n        simulationTime = simulationTime + stepTime + bootTime;\n\n        // Increments on/off time\n        if (executedTasks) {\n            onTime = onTime + ((stepTime + bootTime) * 1000);\n        } else {\n            offTime = offTime + (stepTime * 1000);\n        }\n        appCompletionTime = onTime + offTime;\n\n        // Handles App Completions\n        if (appCompleted) {\n            appCompletions = appCompletions + 1;\n            appCompleted = false;\n\n            // Push elements to the buffer\n            s_onTime.unshift(onTime);\n            s_onTime.pop();\n            s_offTime.unshift(offTime);\n            s_offTime.pop();\n            s_appCompTime.unshift(appCompletionTime);\n            s_appCompTime.pop();\n            s_taskCount.unshift(taskCount);\n            s_taskCount.pop();\n            s_pFC.unshift(powerFailureCount);\n            s_pFC.pop();\n            console.log(\"onTime\", s_onTime);\n            console.log(\"offTime\", s_offTime);\n            console.log(\"app completion time\", s_appCompTime);\n            console.log(\"taskCount\", s_taskCount);\n            console.log(\"failure count\", s_pFC);\n            console.log(\"skip Rows\", adaptiveVariablesValues[\"skipRows\"]);\n            console.log(\"skip Columns\", adaptiveVariablesValues[\"skipColumns\"]);\n\n            // Averaging\n            if (adapt) {\n                avgOnTime = average(s_onTime.slice(1, histArraySize));\n                avgOffTime = average(s_offTime.slice(1, histArraySize));\n                avgAppCompletionTime = average(s_appCompTime.slice(1, histArraySize));\n                avgTaskCount = average(s_taskCount.slice(1, histArraySize));\n                avgpowerFailureCount = average(s_pFC.slice(1, histArraySize));\n            }\n\n            // Handles Graphical Display\n            findAccuracyNow();\n            if (adaptiveVariablesValues[\"skipColumns\"] !== 0 || adaptiveVariablesValues[\"skipRows\"] !== 0) {\n                onTimeAccuracy.push({ Accuracy: accuracyArray[accuracyArray.length - 1], Time: simulationTime })\n            } else if (adaptiveVariablesValues[\"skipColumns\"] == 0 || adaptiveVariablesValues[\"skipRows\"] == 0) {\n                offTimeAccuracy.push({ Accuracy: accuracyArray[accuracyArray.length - 1], Time: simulationTime })\n            }\n\n            // Adaptation\n\n            const shouldAdaptUp1 = evaluate(equation1,\n                {\n                    s_onTime: s_onTime[index1],\n                    avgOnTime: avgOnTime,\n                    s_offTime: s_offTime[index1],\n                    avgOffTime: avgOffTime,\n                    s_appCompTime: s_appCompTime[index1],\n                    avgAppCompletionTime: avgAppCompletionTime,\n                    s_taskCount: s_taskCount[index1],\n                    avgTaskCount: avgTaskCount,\n                    s_pFC: s_pFC[index1],\n                    avgpowerFailureCount: avgpowerFailureCount\n                }\n            );\n\n            const shouldAdaptUp2 = evaluate(equation2,\n                {\n                    s_onTime: s_onTime[index2],\n                    avgOnTime: avgOnTime,\n                    s_offTime: s_offTime[index2],\n                    avgOffTime: avgOffTime,\n                    s_appCompTime: s_appCompTime[index2],\n                    avgAppCompletionTime: avgAppCompletionTime,\n                    s_taskCount: s_taskCount[index2],\n                    avgTaskCount: avgTaskCount,\n                    s_pFC: s_pFC[index2],\n                    avgpowerFailureCount: avgpowerFailureCount\n                }\n            );\n\n            const shouldAdaptDown1 = evaluate(equation3,\n                {\n                    s_onTime: s_onTime[index3],\n                    avgOnTime: avgOnTime,\n                    s_offTime: s_offTime[index3],\n                    avgOffTime: avgOffTime,\n                    s_appCompTime: s_appCompTime[index3],\n                    avgAppCompletionTime: avgAppCompletionTime,\n                    s_taskCount: s_taskCount[index3],\n                    avgTaskCount: avgTaskCount,\n                    s_pFC: s_pFC[index3],\n                    avgpowerFailureCount: avgpowerFailureCount\n                }\n            );\n\n            const shouldAdaptDown2 = evaluate(equation4,\n                {\n                    s_onTime: s_onTime[index4],\n                    avgOnTime: avgOnTime,\n                    s_offTime: s_offTime[index4],\n                    avgOffTime: avgOffTime,\n                    s_appCompTime: s_appCompTime[index4],\n                    avgAppCompletionTime: avgAppCompletionTime,\n                    s_taskCount: s_taskCount[index4],\n                    avgTaskCount: avgTaskCount,\n                    s_pFC: s_pFC[index4],\n                    avgpowerFailureCount: avgpowerFailureCount\n                }\n            );\n\n            console.log(shouldAdaptUp1 > shouldAdaptUp2)\n            console.log(shouldAdaptDown1 < shouldAdaptDown2)\n            if (adapt) {\n                if (shouldAdaptUp1 > shouldAdaptUp2) {\n                    adaptUp();\n                }\n                else if (shouldAdaptDown1 < shouldAdaptDown2) {\n                    adaptDown();\n                }\n            }\n\n            // if (equation.term1 === \"onTimeHistory\") {\n            //     if (s_onTime[0] > avgOnTime) {\n            //         adaptDown();\n            //     }\n            //     else if (s_onTime[0] < avgOnTime) {\n            //         adaptUp();\n            //     }\n            // }\n\n            // if (equation.term1 === \"offTimeHistory\") {\n            //     if (s_offTime[0] > avgOffTime) {\n            //         adaptDown();\n            //     }\n            //     else if (s_offTime[0] < avgOffTime) {\n            //         adaptUp();\n            //     }\n            // }\n\n            // if (equation.term1 === \"appCompletionTimeHistory\") {\n            //     if (s_appCompTime[0] > 1000) { // this is checking milli-seconds\n            //         adaptDown();\n            //     }\n            //     else if (s_appCompTime[0] < avgAppCompletionTime) {\n            //         adaptUp();\n            //     }\n            // }\n\n            // if (equation.term1 === \"taskCountHistory\") {\n            //     if (s_taskCount[0] < avgTaskCount) {\n            //         adaptDown();\n            //     }\n            //     else if (s_taskCount[0] > avgTaskCount) {\n            //         adaptUp();\n            //     }\n            // }\n\n            // if (equation.term1 === \"powerFailureCountHistory\") {\n            //     if (s_pFC[0] > avgpowerFailureCount) {\n            //         adaptDown();\n            //     }\n            //     else if (s_pFC[0] < avgpowerFailureCount) {\n            //         adaptUp();\n            //     }\n            // }\n\n            // Reset adaptation signals\n            onTime = 0;\n            offTime = 0;\n            appCompletionTime = 0;\n            taskCount = 0;\n            powerFailureCount = 0;\n            currentTaskNumber = 0;\n            currentTaskIterationNumber = 0;\n            currentTask = configuration.tasks[currentTaskNumber];\n            console.log(\"app completions\", appCompletions);\n        }\n\n    }\n\n    // Cleanup\n\n    const mlAccuracy = handleMLAccuracy();\n    const roundedAccuracy = mlAccuracy.toFixed(2);\n    console.log(\"average accuracy of all classifications\", roundedAccuracy)\n\n    // Return\n\n    return ({\n        appCompletions: appCompletions,\n        mlAccuracy: roundedAccuracy,\n        onTimeAccuracy: onTimeAccuracy,\n        offTimeAccuracy: offTimeAccuracy\n    })\n\n}\n\nexport default Main","import File from '../misc/test.csv';\nimport csv2array from './CSVToArray';\n\nasync function Main() {\n\n    // Initial Values\n    let rawData;\n    let time = [];\n    let mpp = [];\n\n    // Handles CSV Data\n    async function getData() {\n        const response = await fetch(File);\n        const table = await response.text();\n        rawData = csv2array(table);\n    }\n\n    const findMaxPowerPoint = (input) => {\n        let i = 0;\n        let temp_time = [];\n        let voltage = [];\n        let current = [];\n        input.forEach((item, index, array) => {\n            temp_time.push(item[0]);\n            voltage.push(item[1]);\n            current.push(item[2]);\n            i = i + 1;\n            if (i === 512) {\n                time.push(Math.max.apply(Math, temp_time));\n                mpp.push(Math.max.apply(Math, dotProduct(zipArray(voltage, current))));\n                voltage = [];\n                current = [];\n                i = 0;\n            }\n        })\n    }\n\n    const zipArray = (array1, array2) => {\n        const zipArray = array1.map(function (e, i) {\n            return [e, array2[i]];\n        });\n        return zipArray;\n    }\n\n    const dotProduct = (array) => {\n        const dotProduct = array.map((item) => {\n            return [(item[0] * item[1])];\n        })\n        return dotProduct;\n    }\n\n    const formatData = (input) => {\n        const data = []\n        input.forEach((item, index, array) => {\n            data.push({ Time: item[0], Power: item[1]*1000 })\n        })\n        return data\n    }\n\n    // Script\n    await getData();\n    findMaxPowerPoint(rawData);\n    const data = zipArray(time, mpp);\n    const formattedData = formatData(data);\n    return formattedData;\n\n}\n\nexport default Main\n","import React, { PureComponent } from 'react';\nimport GraphScript from '../scripts/GraphScript'\nimport { ComposedChart, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } from 'recharts';\n\nexport default class Example extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n        };\n        this.onTimeAccuracy = props.data1;\n        this.offTimeAccuracy = props.data2;\n    }\n\n    componentDidMount() {\n        GraphScript().then((response) => { this.setState({ data: response }); console.log(response) });\n        console.log(this.onTimeAccuracy)\n        console.log( this.offTimeAccuracy)\n    }\n\n    render() {\n        return (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <ComposedChart\n                    width={500}\n                    height={300}\n                    margin={{\n                        top: 5,\n                        right: 0,\n                        left: 0,\n                        bottom: 10,\n                    }}\n                >\n                    <defs>\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"#2AB06E\" stopOpacity={0.8} />\n                            <stop offset=\"95%\" stopColor=\"#2AB06E\" stopOpacity={0.4} />\n                        </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"Time\" type=\"number\" domain={['dataMin', 'dataMax']} ticks={[15, 30, 45, 60]}>\n                        <Label value=\"Time\" offset={-5} position=\"insideBottom\" />\n                    </XAxis>\n                    <YAxis>\n                        <Label value=\"Power (mW)\" offset={0} position=\"middle\" angle={-90} />\n                    </YAxis>\n                    <YAxis yAxisId=\"right\" orientation=\"right\" domain={[0, 100]}>\n                        <Label value=\"Accuracy (%)\" offset={0} position=\"middle\" angle={-90} />\n                    </YAxis>\n                    <Tooltip />\n                    <Legend verticalAlign=\"top\" height={36} />\n                    <Area data={this.state.data} type=\"monotone\" dataKey=\"Power\" stroke=\"#2AB06E\" fillOpacity={1} fill=\"url(#colorPv)\" activeDot={{ r: 2 }} />\n                    <Line yAxisId=\"right\" data={this.onTimeAccuracy} type=\"monotone\" dataKey=\"onTimeAccuracy\" stroke=\"#E33737\" strokeWidth={0} activeDot={{ r: 2 }} />\n                    <Line yAxisId=\"right\" data={this.offTimeAccuracy} type=\"monotone\" dataKey=\"offTimeAccuracy\" stroke=\"#5559D9\" strokeWidth={0} activeDot={{ r: 2 }} />\n                </ComposedChart>\n            </ResponsiveContainer>\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/Hawaii.c70d354d.png\";","import React, { useEffect, useState, useRef } from 'react';\nimport Graph from './components/Graph';\nimport Hawaii from './images/Hawaii.png';\nimport MNIST from './config/mnist.json';\nimport ReactFlow, { Controls, Background } from 'react-flow-renderer';\nimport SimulationScript from './scripts/SimulationScript';\n\nimport { Slider, IconButton, TextField, Button, FormControlLabel, Switch, Dialog, DialogActions, DialogTitle, CircularProgress } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { withStyles } from '@material-ui/core/styles';\nimport { BsGear } from \"react-icons/bs\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PropTypes from 'prop-types';\n\nimport 'katex/dist/katex.min.css';\nimport { BlockMath } from 'react-katex';\nimport { parse } from 'mathjs'\n\nfunction App() {\n\n  let elements = [];\n  const JSONdata = MNIST;\n  const [adaptationStrategy, setAdaptationStrategy] = useState(JSONdata.adaptationStrategy[0]);\n  const [tasks, setTasks] = useState(adaptationStrategy.tasks);\n  const [knobs, setKnobs] = useState(adaptationStrategy.adaptiveVariables);\n  const [flowChart, setFlowChart] = useState([]);\n\n  const [appCompletions, setAppCompletions] = useState(0);\n  const [accuracy, setAccuracy] = useState(0);\n  const [onTimeAccuracy, setOnTimeAccuracy] = useState([]);\n  const [offTimeAccuracy, setOffTimeAccuracy] = useState([]);\n\n  const [actualEquation1, setActualEquation1] = useState(\"\");\n  const [actualEquation2, setActualEquation2] = useState(\"\");\n  const [LaTeXEquation1, setLaTeXEquation1] = useState(String.raw`\\mathit{if}\\ (\\mathit{s\\_off}_{n} - \\epsilon) < \\frac{1}{n}\\sum_{i=1}^{n-1} \\mathit{s\\_off}_{i}`);\n  const [LaTeXEquation2, setLaTeXEquation2] = useState(String.raw`\\mathit{if}\\ (\\mathit{s\\_off}_{n} + \\epsilon) > \\frac{1}{n}\\sum_{i=1}^{n-1} \\mathit{s\\_off}_{i}`);\n\n  const [showModal, setShowModal] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n  const [histArraySize, setHistArraySize] = useState(0);\n  const [stepSize, setStepSize] = useState(0);\n  let adapt = false;\n\n  useEffect(() => {\n    getElements();\n    setFlowChart(elements);\n  }, [])\n\n  // Initializes and Arranges Task Map\n  const getElements = async () => {\n    let x = 150;\n    let y = 50;\n    tasks.map((item, index, array) => {\n      if (index === 0) {\n        elements.push({\n          id: index + 1,\n          //type: 'input', // input node\n          data: { label: item.taskName },\n          position: { x: x + 500, y: y },\n          sourcePosition: 'right',\n          targetPosition: 'bottom',\n          style: { backgroundColor: '#E8E8FC', borderRadius: 10, padding: 40, fontSize: 9, fontWeight: 'bold' }\n        }, {\n          id: 'arrow' + index + 1,\n          type: 'default',\n          source: index + 1,\n          target: index + 2,\n          arrowHeadType: 'arrowclosed',\n          animated: true,\n          style: { stroke: '#ffffff', strokeWidth: 3 },\n        });\n      } else if (index + 1 === tasks.length) {\n        if (x === 150) x = 400;\n        else if (x === 400) x = 150;\n        y = y + 100;\n        elements.push({\n          id: index + 1,\n          //type: 'output', // input node\n          data: { label: item.taskName },\n          position: { x: x, y: y },\n          sourcePosition: 'right',\n          targetPosition: 'top',\n          style: { backgroundColor: '#E8E8FC', borderRadius: 10, padding: 40, fontSize: 9, fontWeight: 'bold' }\n        }, {\n          id: 'arrow' + index + 1,\n          type: 'default',\n          source: index + 1,\n          target: 1,\n          arrowHeadType: 'arrowclosed',\n          animated: true,\n          style: { stroke: '#ffffff', strokeWidth: 3 },\n        });\n      } else {\n        if (x === 150) x = 400;\n        else if (x === 400) x = 150;\n        y = y + 100;\n        elements.push({\n          id: index + 1,\n          data: { label: item.taskName },\n          position: { x: x, y: y },\n          sourcePosition: 'right',\n          targetPosition: 'top',\n          style: { backgroundColor: '#E8E8FC', borderRadius: 10, padding: 40, fontSize: 9, fontWeight: 'bold' }\n        }, {\n          id: 'arrow' + index + 1,\n          type: 'default',\n          source: index + 1,\n          target: index + 2,\n          arrowHeadType: 'arrowclosed',\n          animated: true,\n          style: { stroke: '#ffffff', strokeWidth: 3 },\n        })\n      }\n    })\n  }\n\n  // Initializes Custom Sliders\n  const iOSBoxShadow = \" 0px 2px 4px 0px #000000\";\n  function ValueLabelComponent(props) {\n    const { children, open, value } = props;\n    return (\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n        {children}\n      </Tooltip>\n    );\n  }\n  ValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  const PrettoSlider = withStyles({\n    root: {\n      color: '#0058FF',\n      height: 8,\n    },\n    thumb: {\n      height: 24,\n      width: 24,\n      backgroundColor: '#fff',\n      border: '2px solid currentColor',\n      marginTop: -10,\n      marginLeft: -12,\n      '&:focus, &:hover, &$active': {\n        boxShadow: 'inherit',\n      },\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      height: 8,\n      borderRadius: 8,\n    },\n    rail: {\n      height: 8,\n      borderRadius: 8,\n      backgroundColor: \"#000000\",\n      boxShadow: iOSBoxShadow,\n    },\n  })(Slider);\n\n  // Handles AdaptUp Equation Changes\n  const handleAdaptUp = (event) => {\n    console.log(event.target.value)\n    setActualEquation1(event.target.value)\n    //  const parced = parse(event.target.value).toTex()\n    // setLaTeXEquation1(String.raw`\\mathit{if}\\ ${parced}`)\n  }\n\n  // Handles AdaptDown Equation Changes\n  const handleAdaptDown = (event) => {\n    console.log(event.target.value)\n    setActualEquation2(event.target.value)\n    // const parced = parse(event.target.value).toTex()\n    // setLaTeXEquation2(String.raw`\\mathit{if}\\ ${parced}`)\n  }\n\n  const commitAdaptUp = () => {\n    const parced = parse(actualEquation1).toTex()\n    setLaTeXEquation1(String.raw`\\mathit{if}\\ ${parced}`)\n  }\n\n  const commitAdaptDown = () => {\n    const parced = parse(actualEquation2).toTex()\n    setLaTeXEquation2(String.raw`\\mathit{if}\\ ${parced}`)\n  }\n\n  // Excecutes Simulation Script\n  const executeScript = () => {\n    const equation = { adaptUp: actualEquation1, adaptDown: actualEquation2 }\n    setShowModal(false);\n    setShowLoading(true);\n    console.log(histArraySize)\n    console.log(stepSize)\n    console.log(adapt)\n    SimulationScript(histArraySize, stepSize, equation, adapt).then((response) => {\n      console.log(response)\n      setAppCompletions(response.appCompletions);\n      setAccuracy(response.mlAccuracy);\n      setOnTimeAccuracy(response.onTimeAccuracy);\n      setOffTimeAccuracy(response.offTimeAccuracy);\n      setShowLoading(false);\n    })\n  }\n\n  return (\n    <>\n\n      <div style={showLoading ? { pointerEvents: \"none\", opacity: \"0.5\" } : {}}>\n\n        {/* Task Map */}\n        <div style={{ flex: 1, position: 'absolute', width: '68%', height: '70%', left: 0, top: 0, backgroundColor: '#69AA83', boxShadow: \"inset 0px 0px 20px 0px #ffffff\" }}>\n          <ReactFlow elements={flowChart} arrowHeadColor={\"#ffffff\"}>\n            <Controls />\n            <Background\n              variant=\"dots\"\n              gap={16}\n              size={1}\n            />\n          </ReactFlow>\n        </div>\n\n        {/* Knobs */}\n        <div style={{ flex: 1, position: 'absolute', width: '32%', height: '70%', right: 0, top: 0 }}>\n          <div style={{ flex: 1, padding: 30, height: '93%' }}>\n            <div style={{ flex: 1, flexDirection: 'row', marginTop: 10 }}>\n              <div style={{ fontFamily: \"GemunuLibre-ExtraBold\", fontSize: 45, fontWeight: '600', textAlign: 'center' }}>Configuration</div>\n              <IconButton style={{ marginLeft: '90%', top: -45 }} onClick={() => setShowModal(!showModal)}>\n                <BsGear size={24} color='#7F8489' />\n              </IconButton>\n            </div>\n            <div style={{ justifyContent: 'center', alignItems: 'center', textAlign: 'center', fontSize: 25, fontFamily: \"GemunuLibre-SemiBold\", textDecoration: 'underline', marginBottom: '2%' }}>\n              Step 1: Adjust Knobs\n            </div>\n            <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" value={histArraySize} max={8} onChange={(event, value) => { setHistArraySize(value) }} onChangeCommitted={(event, value) => { setHistArraySize(value) }} />\n            <div style={{ flex: 1, fontFamily: \"GemunuLibre-Light\", fontSize: 20, textAlign: 'center', marginBottom: 25 }}>History Array Size</div>\n            <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" value={stepSize} max={8} onChange={(event, value) => { setStepSize(value) }} onChangeCommitted={(event, value) => { setStepSize(value) }} />\n            <div style={{ flex: 1, fontFamily: \"GemunuLibre-Light\", fontSize: 20, textAlign: 'center', marginBottom: 25 }}>Adaptation Step Size</div>\n            <div style={{ justifyContent: 'center', alignItems: 'center', textAlign: 'center', fontSize: 25, fontFamily: \"GemunuLibre-SemiBold\", textDecoration: 'underline', marginBottom: '2%', marginTop: '5%' }}>\n              Step 2: Enter Heuristic Equation\n            </div>\n            <div style={{ marginTop: '2%', borderWidth: 2, borderColor: \"#000\", borderStyle: 'solid', borderRadius: 5 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 20, textAlign: 'center', fontWeight: 'bold', marginTop: '2%' }}>Adapt Up</div>\n              <BlockMath>{LaTeXEquation1}</BlockMath>\n              <div style={{ display: 'inline' }}>\n                <TextField label=\"Adapt Up\" variant=\"filled\" style={{ width: '100%' }} onChange={(event) => handleAdaptUp(event)} onKeyPress={(ev) => { if (ev.key === 'Enter') commitAdaptUp() }}></TextField>\n              </div>\n            </div>\n            <div style={{ marginTop: '1%', borderWidth: 2, borderColor: \"#000\", borderStyle: 'solid', borderRadius: 5 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 20, textAlign: 'center', fontWeight: 'bold', marginTop: '2%' }}>Adapt Down</div>\n              <BlockMath>{LaTeXEquation2}</BlockMath>\n              <div style={{ display: 'inline' }}>\n                <TextField label=\"Adapt Down\" variant=\"filled\" style={{ width: '100%' }} onChange={(event) => handleAdaptDown(event)} onKeyPress={(ev) => { if (ev.key === 'Enter') commitAdaptDown() }}></TextField>\n              </div>\n            </div>\n            <div style={{ justifyContent: 'center', alignItems: 'center', textAlign: 'center', fontSize: 25, fontFamily: \"GemunuLibre-SemiBold\", textDecoration: 'underline', marginBottom: '2%', marginTop: '5%' }}>\n              Step 3: Check Adaptation and Run\n            </div>\n            <div style={{ flexDirection: 'row', marginLeft: '32%' }}>\n              <FormControlLabel\n                control={<Switch size={'medium'} color=\"primary\" onChange={() => adapt = !adapt} />}\n                label=\"Adapt\"\n              />\n              <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={() => executeScript()} >\n                Execute\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Statistics */}\n        <div style={{ flex: 1, position: 'absolute', width: '30%', height: '30%', right: 0, bottom: 0 }}>\n          <div style={{ flex: 1, padding: 30 }}>\n            <div style={{ flex: 1, fontFamily: \"GemunuLibre-ExtraBold\", fontSize: 45, textAlign: 'center' }}>Statistics</div>\n            <div style={{ flexDirection: 'row', marginTop: 70 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 40, display: 'inline' }}>App Completions:</div>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 40, display: 'inline', marginLeft: '40%' }}>{appCompletions}</div>\n            </div>\n            <div style={{ flexDirection: 'row', marginTop: 70 }}>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 40, display: 'inline' }}>Accuracy:</div>\n              <div style={{ fontFamily: \"GemunuLibre-Light\", fontSize: 40, display: 'inline', marginLeft: '50%' }}>{accuracy}%</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Chart */}\n        <div style={{ flex: 1, position: 'absolute', width: '70%', height: '30%', left: 0, bottom: 0 }}>\n          <Graph data1={onTimeAccuracy} data2={offTimeAccuracy} />\n        </div>\n\n        {/* Modal */}\n        <Dialog open={showModal} onClose={() => setShowModal(false)} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Settings</DialogTitle>\n          <DialogActions>\n            <Button onClick={() => setShowModal(false)} color=\"primary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n      </div >\n\n      {/* Loading */}\n      {/* {showLoading ?\n        <div style={{ position: 'absolute', left: '50%', top: '40%' }}>\n          <CircularProgress\n            size={300}\n          />\n        </div>\n        : null\n      } */}\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}